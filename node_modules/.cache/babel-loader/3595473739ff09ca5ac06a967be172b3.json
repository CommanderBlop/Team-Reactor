{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js\";\nimport React, { useContext } from 'react';\nimport FirebaseContext from '../Firebase';\nconst API_KEY = \"7d667341\"; // function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response => \n//                 response.json())\n//             .then(data => {\n//                 return data\n//             })\n// }\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n  const [dataSet, setDataSet] = useState({\n    movieName: '',\n    upload: false,\n    title: '',\n    genre: '',\n    year: '',\n    director: '',\n    length: '',\n    plot: '',\n    resultID: '',\n    img: '',\n    data: '',\n    response: false\n  });\n\n  function nameInput(event) {\n    setDataSet({\n      movieName: event.target.value.trim()\n    });\n  }\n\n  function handleSearch() {\n    console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY);\n    fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY).then(response => response.json()).then(data => {\n      setState({\n        response: data.Response === \"False\" ? false : true,\n        title: data.Title,\n        year: data.Year,\n        length: data.Runtime,\n        director: data.Director,\n        genre: data.Genre,\n        plot: data.Plot,\n        resultID: data.imdbID,\n        img: data.Poster\n      });\n      console.log(\"finished search\");\n    });\n    console.log(\"result:\" + dataSet.searchResult);\n  }\n\n  function submit() {\n    const firebase = useContext(FirebaseContext);\n    firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n      regions: firebase.firestore.movieID.arrayUnion(dataSet.resultID)\n    });\n    console.log(\"successfully added to your list!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add another movie\",\n    onChange: nameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Click to search\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Add to your collection!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: ({\n      visibility: dataSet.response ? \"visible\" : \"hidden\"\n    }, {\n      textAlign: 'left'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: dataSet.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, dataSet.response && dataSet.title), dataSet.response && \"Year: \" + dataSet.year, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 62\n    }\n  }), dataSet.response && \"Length: \" + dataSet.length, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 66\n    }\n  }), dataSet.response && \"Director: \" + dataSet.director, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 70\n    }\n  }), dataSet.response && \"Genre: \" + dataSet.genre, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 64\n    }\n  }), dataSet.response && dataSet.plot, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 51\n    }\n  })));\n}\n\nexport default MovieFinder;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js"],"names":["React","useContext","FirebaseContext","API_KEY","MovieFinder","dataSet","setDataSet","useState","movieName","upload","title","genre","year","director","length","plot","resultID","img","data","response","nameInput","event","target","value","trim","handleSearch","console","log","fetch","then","json","setState","Response","Title","Year","Runtime","Director","Genre","Plot","imdbID","Poster","searchResult","submit","firebase","db","collection","doc","update","regions","firestore","movieID","arrayUnion","visibility","textAlign"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport FirebaseContext from '../Firebase'\nconst API_KEY = \"7d667341\"\n\n// function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response => \n//                 response.json())\n            \n//             .then(data => {\n//                 return data\n//             })\n// }\n\n\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n \n    const [dataSet, setDataSet] = useState(\n        {movieName: '',\n        upload: false,\n        title:'',\n        genre:'',\n        year:'',\n        director:'',\n        length:'',\n        plot:'',\n        resultID: '',\n        img: '',\n        data: '',\n        response: false}\n    )\n        \n    function nameInput(event) {\n        setDataSet({\n            movieName: event.target.value.trim()\n        })\n    }\n\n    function handleSearch() {\n        console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n        fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n            .then(response => \n                response.json())\n            \n            .then(data => {setState({\n                response: data.Response === \"False\" ? false : true,\n                title: data.Title,\n                year: data.Year,\n                length: data.Runtime,\n                director: data.Director,\n                genre: data.Genre,\n                plot: data.Plot,\n                resultID : data.imdbID,\n                img : data.Poster\n            })\n            console.log(\"finished search\")})\n            console.log(\"result:\" + dataSet.searchResult)\n    }\n\n    function submit() {\n        const firebase = useContext(FirebaseContext)\n        firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n            regions: firebase.firestore.movieID.arrayUnion(dataSet.resultID)\n        })\n        console.log(\"successfully added to your list!\")\n    }\n\n    return(\n        <div>\n            <form>\n                <input type=\"text\" placeholder=\"Add another movie\" onChange = {nameInput} />\n            </form>\n            \n            <button onClick = {handleSearch}>Click to search</button>\n            <button onClick = {submit}>Add to your collection!</button>\n            <br/>\n            \n            <p style={{visibility: dataSet.response ? \"visible\" : \"hidden\"}, {textAlign: 'left'}}>\n                <img src = {dataSet.img} ></img>\n                <h1>{dataSet.response && dataSet.title}</h1>\n                {dataSet.response && \"Year: \" + dataSet.year}<br/>\n                {dataSet.response && \"Length: \" + dataSet.length}<br/>\n                {dataSet.response && \"Director: \" + dataSet.director}<br/>\n                {dataSet.response && \"Genre: \" + dataSet.genre}<br/>\n                {dataSet.response && dataSet.plot}<br/>\n            </p>\n            \n        </div>\n    )\n}\n\nexport default MovieFinder"]},"metadata":{},"sourceType":"module"}