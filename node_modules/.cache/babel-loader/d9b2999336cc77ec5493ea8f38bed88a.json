{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/community-post.js\";\nimport React from 'react';\nimport Post from './post.js';\n\nfunction CommunityPost(props) {\n  //props: community id to search for all the posts from database\n  let DummyPosts = [{\n    username: \"user1\",\n    content: \"hi\"\n  }, {\n    username: \"user2\",\n    content: \"hi2\"\n  }];\n  const [currentPost, setCurrentPost] = React.useState({\n    username: \"\",\n    content: \"\"\n  });\n  const [posts, setPosts] = React.useState([]);\n\n  function handlePostChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentPost(prevPost => {\n      return {\n        username: prevPost.username,\n        content: value\n      };\n    });\n  }\n\n  function addPost() {\n    setPosts(prevPosts => {\n      return [...prevPosts, currentPost];\n    });\n    setCurrentPost({\n      username: \"\",\n      content: \"\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    alt: \"Community Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), \"//\", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, props.communityName), \" // community name\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"New Post\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"post\",\n    onChange: handlePostChange,\n    placeholder: \"add a new Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, currentPost.content), \"//post all the posts\", posts.map(post => {\n    return /*#__PURE__*/React.createElement(Post, {\n      username: post.username,\n      content: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    });\n  }));\n}\n\nexport default CommunityPost;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/community-post.js"],"names":["React","Post","CommunityPost","props","DummyPosts","username","content","currentPost","setCurrentPost","useState","posts","setPosts","handlePostChange","event","name","value","target","prevPost","addPost","prevPosts","communityName","map","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAE3B;AACA,MAAIC,UAAU,GAAG,CAAC;AAACC,IAAAA,QAAQ,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAAD,EAAoC;AAACD,IAAAA,QAAQ,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAApC,CAAjB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACS,QAAN,CAAe;AACnDJ,IAAAA,QAAQ,EAAE,EADyC;AAEnDC,IAAAA,OAAO,EAAE;AAF0C,GAAf,CAAtC;AAKA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;;AAEC,WAASG,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACAR,IAAAA,cAAc,CAACS,QAAQ,IAAI;AACzB,aAAO;AACLZ,QAAAA,QAAQ,EAAEY,QAAQ,CAACZ,QADd;AAELC,QAAAA,OAAO,EAAES;AAFJ,OAAP;AAKD,KANa,CAAd;AAOD;;AAED,WAASG,OAAT,GAAkB;AAChBP,IAAAA,QAAQ,CAACQ,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAeZ,WAAf,CAAP;AACD,KAFO,CAAR;AAIAC,IAAAA,cAAc,CAAC;AACbH,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAD,CAAd;AAID;;AAEF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,GAAG,EAAC,EAAT;AAAY,IAAA,GAAG,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,qBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACiB,aAAX,CAFF,qCAGA;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAEN,gBAAzC;AAA2D,IAAA,WAAW,EAAC,gBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,WAAW,CAACD,OAAjB,CALA,0BAQCI,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAI;AACd,wBACE,oBAAC,IAAD;AACC,MAAA,QAAQ,EAAEA,IAAI,CAACjB,QADhB;AAEC,MAAA,OAAO,EAAEiB,IAAI,CAAChB,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMJ,GAPA,CARD,CADF;AAmBD;;AAED,eAAeJ,aAAf","sourcesContent":["import React from 'react';\nimport Post from './post.js';\n\nfunction CommunityPost(props){\n\n  //props: community id to search for all the posts from database\n  let DummyPosts = [{username: \"user1\", content: \"hi\"},{username: \"user2\", content: \"hi2\"}];\n  const [currentPost, setCurrentPost] = React.useState({\n    username: \"\",\n    content: \"\"\n  });\n\n  const [posts, setPosts] = React.useState([]);\n\n   function handlePostChange(event){\n     const {name, value} = event.target;\n     setCurrentPost(prevPost => {\n       return {\n         username: prevPost.username,\n         content: value\n\n       };\n     });\n   }\n\n   function addPost(){\n     setPosts(prevPosts => {\n       return [...prevPosts, currentPost]\n     });\n\n     setCurrentPost({\n       username: \"\",\n       content: \"\"\n     });\n   }\n\n  return(\n    <div>\n    <img src=\"\" alt=\"Community Icon\"></img>\n    //<h1>{props.communityName}</h1> // community name\n    <button onClick={addPost} >New Post</button>\n    <input type=\"text\" name=\"post\" onChange={handlePostChange} placeholder=\"add a new Post\"></input>\n    <h1>{currentPost.content}</h1>\n\n//post all the posts\n    {posts.map(post => {\n         return (\n           <Post\n            username={post.username}\n            content={post.content}\n          />\n       )\n    })}\n    </div>\n  );\n}\n\nexport default CommunityPost;\n"]},"metadata":{},"sourceType":"module"}