{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase';\nimport AuthContext from './Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { Card, Button, Collapse, Badge, Row, Col } from 'react-bootstrap';\n\nfunction Friends() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState();\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (user) {\n      let friendList;\n      let friendsBuilder = [];\n      firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n        friendList = doc.data().friends;\n      }).then(function () {\n        friendList.forEach((friend, index) => {\n          firebase.db.collection('user').doc(friend).get().then(function (doc) {\n            setFriends(friendsBuilder.concat(doc.data()));\n          });\n        });\n        setLoading(false);\n      });\n    }\n  }, [user]);\n  let localDisplay = 'loading...';\n\n  if (!loading) {\n    localDisplay = friends.map((friend, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, friend.name), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 38\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, friend.insta && friend.insta), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, friend.snap && friend.snap));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, localDisplay);\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Card","Button","Collapse","Badge","Row","Col","Friends","firebase","user","setUser","friends","setFriends","loading","setLoading","auth","onAuthStateChanged","friendList","friendsBuilder","db","collection","doc","uid","get","then","data","forEach","friend","index","concat","localDisplay","map","name","insta","snap"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,GAAxC,EAA6CC,GAA7C,QAAwD,iBAAxD;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAMC,QAAQ,GAAGjB,UAAU,CAACG,eAAD,CAA3B;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC;AAEAgB,EAAAA,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCP,IAAI,IAAI;AACrC,QAAIA,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GAND;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,IAAJ,EAAS;AACL,UAAIQ,UAAJ;AACA,UAAIC,cAAc,GAAG,EAArB;AACAV,MAAAA,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCZ,IAAI,CAACa,GAAxC,EAA6CC,GAA7C,GAAmDC,IAAnD,CAAwD,UAAUH,GAAV,EAAe;AACnEJ,QAAAA,UAAU,GAAGI,GAAG,CAACI,IAAJ,GAAWd,OAAxB;AACH,OAFD,EAEGa,IAFH,CAEQ,YAAY;AAChBP,QAAAA,UAAU,CAACS,OAAX,CAAmB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClCpB,UAAAA,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCM,MAAnC,EAA2CJ,GAA3C,GAAiDC,IAAjD,CAAsD,UAAUH,GAAV,EAAe;AACjET,YAAAA,UAAU,CAACM,cAAc,CAACW,MAAf,CAAsBR,GAAG,CAACI,IAAJ,EAAtB,CAAD,CAAV;AACH,WAFD;AAGH,SAJD;AAKAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OATD;AAWH;AACJ,GAhBQ,EAgBN,CAACL,IAAD,CAhBM,CAAT;AAkBA,MAAIqB,YAAY,GAAG,YAAnB;;AAEA,MAAI,CAACjB,OAAL,EAAa;AACTiB,IAAAA,YAAY,GAAGnB,OAAO,CAACoB,GAAR,CAAY,CAACJ,MAAD,EAASC,KAAT,KAAmB;AAC1C,0BACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACK,IAAX,CADA,oBACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,MAAM,CAACM,KAAP,IAAgBN,MAAM,CAACM,KAA3B,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,MAAM,CAACO,IAAP,IAAeP,MAAM,CAACO,IAA1B,CAHA,CADJ;AAOH,KARc,CAAf;AASH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,YAAJ,CADJ;AAGH;;AAED,eAAevB,OAAf","sourcesContent":["\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card, Button, Collapse, Badge, Row, Col } from 'react-bootstrap'\n\nfunction Friends() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [friends, setFriends] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user){\n            let friendList\n            let friendsBuilder = []\n            firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n                friendList = doc.data().friends\n            }).then(function () {\n                friendList.forEach((friend, index) => {\n                    firebase.db.collection('user').doc(friend).get().then(function (doc) {\n                        setFriends(friendsBuilder.concat(doc.data()))\n                    })\n                })\n                setLoading(false)\n            }\n            )\n        }\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading){\n        localDisplay = friends.map((friend, index) => {\n            return(\n                <>\n                <p>{friend.name}</p> <br/>\n                <p>{friend.insta && friend.insta}</p>\n                <p>{friend.snap && friend.snap}</p>\n                </>\n            ) \n        })\n    }\n    \n\n    return (\n        <p>{localDisplay}</p>\n    )\n}\n\nexport default Friends"]},"metadata":{},"sourceType":"module"}