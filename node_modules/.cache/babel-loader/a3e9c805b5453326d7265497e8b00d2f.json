{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/AddMovie.js\";\nimport React from 'react';\nimport FirebaseContext from '../Firebase';\nconst API_KEY = \"7d667341\";\n\nfunction FindMovie(movieName, releaseYear) {\n  //find the movie\n  fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY).then(response => response.json()).then(data => {\n    return data;\n  });\n}\n\nfunction AddMovie(movieIMDB) {\n  const firebase = useContext(FirebaseContext);\n  firebase.collection(\"movieTester\").doc(\"testUser\").update({\n    regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n  });\n}\n\nclass MovieFinder extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movieName: '',\n      upload: false,\n      searchResult: '',\n      resultID: '',\n      img: ''\n    };\n  }\n\n  handleSearch(event) {\n    this.setState = {\n      movieName: event.target.value\n    };\n    fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY).then(response => response.json()).then(data => {\n      this.state.searchResult = data.Title + \" \\nYear:\" + data.year + \" \\nLength: \" + data.Runtime + \"\\nGenre: \" + data.Genre;\n      \"\\n\" + data.Plot;\n      this.state.resultID = data.imdbID;\n      this.state.img = data.img;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add another movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Click to search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Add to your collection!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, this.searchResult), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default MovieFinder;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/AddMovie.js"],"names":["React","FirebaseContext","API_KEY","FindMovie","movieName","releaseYear","fetch","then","response","json","data","AddMovie","movieIMDB","firebase","useContext","collection","doc","update","regions","firestore","movieID","arrayUnion","MovieFinder","Component","constructor","state","upload","searchResult","resultID","img","handleSearch","event","setState","target","value","Title","year","Runtime","Genre","Plot","imdbID","render","submit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,MAAMC,OAAO,GAAG,UAAhB;;AAEA,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,WAA9B,EAA2C;AACvC;AACAC,EAAAA,KAAK,CAAC,+BAA+BF,SAA/B,GAA2C,KAA3C,GAAmDC,WAAnD,GAAiE,UAAjE,GAA8EH,OAA/E,CAAL,CACSK,IADT,CACcC,QAAQ,IACVA,QAAQ,CAACC,IAAT,EAFZ,EAISF,IAJT,CAIcG,IAAI,IAAI;AACV,WAAOA,IAAP;AACH,GANT;AAOH;;AAGD,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AACzB,QAAMC,QAAQ,GAAGC,UAAU,CAACb,eAAD,CAA3B;AACAY,EAAAA,QAAQ,CAACE,UAAT,CAAoB,aAApB,EAAmCC,GAAnC,CAAuC,UAAvC,EAAmDC,MAAnD,CAA0D;AACtDC,IAAAA,OAAO,EAAEL,QAAQ,CAACM,SAAT,CAAmBC,OAAnB,CAA2BC,UAA3B,CAAsCT,SAAtC;AAD6C,GAA1D;AAGH;;AAED,MAAMU,WAAN,SAA0BtB,KAAK,CAACuB,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTrB,MAAAA,SAAS,EAAE,EADF;AAETsB,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,GAAG,EAAE;AALI,KAAb;AAOH;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,SAAKC,QAAL,GAAiB;AACb5B,MAAAA,SAAS,EAAE2B,KAAK,CAACE,MAAN,CAAaC;AADX,KAAjB;AAGA5B,IAAAA,KAAK,CAAC,+BAA+BF,SAA/B,GAA2C,KAA3C,GAAmDC,WAAnD,GAAiE,UAAjE,GAA8EH,OAA/E,CAAL,CACKK,IADL,CACUC,QAAQ,IACVA,QAAQ,CAACC,IAAT,EAFR,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACV,WAAKe,KAAL,CAAWE,YAAX,GAA0BjB,IAAI,CAACyB,KAAL,GAAa,UAAb,GACpBzB,IAAI,CAAC0B,IADe,GACR,aADQ,GACQ1B,IAAI,CAAC2B,OADb,GAEtB,WAFsB,GAER3B,IAAI,CAAC4B,KAFvB;AAGI,aAAO5B,IAAI,CAAC6B,IAAZ;AACJ,WAAKd,KAAL,CAAWG,QAAX,GAAsBlB,IAAI,CAAC8B,MAA3B;AACA,WAAKf,KAAL,CAAWI,GAAX,GAAiBnB,IAAI,CAACmB,GAAtB;AACH,KAXL;AAYH;;AAEDY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,OAAO,EAAI,KAAKX,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,eAGI;AAAQ,MAAA,OAAO,EAAI,KAAKY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKf,YAAT,CALJ,eAMI;AAAK,MAAA,GAAG,EAAI,KAAKF,KAAL,CAAWI,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAUH;;AAzCqC;;AA4C1C,eAAeP,WAAf","sourcesContent":["import React from 'react'\nimport FirebaseContext from '../Firebase'\nconst API_KEY = \"7d667341\"\n\nfunction FindMovie(movieName, releaseYear) {\n    //find the movie\n    fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n            .then(response => \n                response.json())\n            \n            .then(data => {\n                return data\n            })\n}\n\n\nfunction AddMovie(movieIMDB) {\n    const firebase = useContext(FirebaseContext)\n    firebase.collection(\"movieTester\").doc(\"testUser\").update({\n        regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n    })\n}\n\nclass MovieFinder extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            movieName: '',\n            upload: false,\n            searchResult: '',\n            resultID: '',\n            img: ''\n        }\n    }\n\n    handleSearch(event) {\n        this.setState = ({\n            movieName: event.target.value\n        })\n        fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n            .then(response => \n                response.json())\n            \n            .then(data => {\n                this.state.searchResult = data.Title + \" \\nYear:\" \n                    + data.year + \" \\nLength: \" + data.Runtime + \n                    \"\\nGenre: \" + data.Genre\n                    \"\\n\" + data.Plot\n                this.state.resultID = data.imdbID\n                this.state.img = data.img\n            })\n    }\n\n    render() {\n        return(\n            <div>\n                <input type=\"text\" placeholder=\"Add another movie\"></input>\n                <button onClick = {this.handleSearch}>Click to search</button>\n                <button onClick = {this.submit}>Add to your collection!</button>\n                <br/>\n                <p>{this.searchResult}</p>\n                <img src = {this.state.img}></img>\n            </div>\n        )\n    }\n}\n\nexport default MovieFinder"]},"metadata":{},"sourceType":"module"}