{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/MovieCollection/MovieCollection.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../Firebase';\nimport { useHistory, Link } from 'react-router-dom';\nimport MovieFinder from './addMovie';\nimport { Card, Button, Collapse, ListGroup, ListGroupItem } from 'react-bootstrap';\nconst API_KEY = \"7d667341\";\n\nfunction MovieCollection() {\n  //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n  const firebase = useContext(FirebaseContext);\n  const mList = firebase.db.collection(\"movieTester\").doc(\"testUser\");\n  const [userMovieList, setUserMovieList] = useState(['']);\n  const history = useHistory(); //get user movie collection and put it he re\\\n\n  useEffect(() => {\n    mList.get().then(function (doc) {\n      if (doc.exists) {\n        setUserMovieList(doc.data().movieID);\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n        setUserMovieList(['']);\n      }\n\n      setTriggerNext(1);\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }, []); //const [userMovieList, setUserMovieList] = firetbase.db.collection(\"movieTester\").doc(\"testUser\")\n\n  const [counter, setCounter] = useState(0);\n  const [omdbData, setOmdbData] = useState('Loading...');\n  const [triggerNext, setTriggerNext] = useState(0); //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n\n  let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY; //console.log(url)\n  //fetch data\n\n  useEffect(() => {\n    function doFetch() {\n      fetch(url).then(response => response.json()).then(data => {\n        setOmdbData(data);\n      });\n    }\n\n    doFetch();\n  }, [triggerNext]);\n  let title;\n  let genre;\n  let director;\n  let plot;\n  let img; //extract needed info\n\n  if (userMovieList != ['']) {\n    title = omdbData === 'Loading...' ? omdbData : omdbData.Title;\n    genre = omdbData === 'Loading...' || omdbData.Genre === undefined ? '' : \"Genre: \" + omdbData.Genre;\n    director = omdbData === 'Loading...' || omdbData.Director === undefined ? '' : \"Director: \" + omdbData.Director;\n    plot = omdbData === 'Loading...' || omdbData.Plot === undefined ? '' : omdbData.Plot;\n    img = omdbData === 'Loading...' ? omdbData : omdbData.Poster;\n  } else {\n    title = \"Your collection is empty\";\n    genre = '';\n    director = '';\n    plot = '';\n  } //button right/left click handler\n\n\n  function buttonClick(counterChange) {\n    if (counterChange > 0 && counter + counterChange >= userMovieList.length) {\n      setCounter(0);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading...');\n      return;\n    }\n\n    if (counterChange < 0 && counter + counterChange < 0) {\n      setCounter(userMovieList.length - 1);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading...');\n      return;\n    }\n\n    setCounter(counter + counterChange);\n    setTriggerNext(triggerNext + 1);\n    setOmdbData('Loading...');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"//changed button to Button // \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      history.push('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }\n  }, \"Back\"), \"// \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonClick(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }\n  }, '<'), \"// \", /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  }, '>'), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      history.push('/addMovie');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"To Search\"), \"// \", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }\n  }, \"//     \", /*#__PURE__*/React.createElement(\"img\", {\n    src: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 20\n    }\n  }), \"//     \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 20\n    }\n  }, title), \"//     \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 20\n    }\n  }, genre), \"//     \", /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 20\n    }\n  }, director), \"//     \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 20\n    }\n  }, plot), \"// \"), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '18rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, genre)), /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, director), /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, plot)), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      history.push('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonClick(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, '<'), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => buttonClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, '>'))));\n}\n\nexport default MovieCollection;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/MovieCollection/MovieCollection.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","useHistory","Link","MovieFinder","Card","Button","Collapse","ListGroup","ListGroupItem","API_KEY","MovieCollection","firebase","mList","db","collection","doc","userMovieList","setUserMovieList","history","get","then","exists","data","movieID","console","log","setTriggerNext","catch","error","counter","setCounter","omdbData","setOmdbData","triggerNext","url","toString","doFetch","fetch","response","json","title","genre","director","plot","img","Title","Genre","undefined","Director","Plot","Poster","buttonClick","counterChange","length","push","width"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from '../Firebase'\nimport {useHistory, Link} from 'react-router-dom'\nimport MovieFinder from './addMovie'\nimport { Card, Button, Collapse,ListGroup,ListGroupItem } from 'react-bootstrap'\n\nconst API_KEY = \"7d667341\"\n\n\n\nfunction MovieCollection() {\n    //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n    const firebase = useContext(FirebaseContext)\n    const mList = firebase.db.collection(\"movieTester\").doc(\"testUser\")\n    const [userMovieList, setUserMovieList] = useState([''])\n    const history = useHistory()\n    //get user movie collection and put it he re\\\n    useEffect(() => {\n        mList.get().then(function(doc) {\n            if (doc.exists) {\n                setUserMovieList(doc.data().movieID)\n                console.log(\"Document data:\", doc.data())\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n                setUserMovieList(['']);\n            }\n            setTriggerNext(1)\n            }).catch(function(error) {\n                console.log(\"Error getting document:\", error);\n            })\n        } ,[]\n    )\n\n    //const [userMovieList, setUserMovieList] = firetbase.db.collection(\"movieTester\").doc(\"testUser\")\n    const [counter, setCounter] = useState(0)\n    const [omdbData, setOmdbData] = useState('Loading...')\n\n    const [triggerNext, setTriggerNext] = useState(0)\n    //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n    let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY\n    //console.log(url)\n\n    //fetch data\n    useEffect(() => {\n        function doFetch() {\n            fetch(url)\n            .then(response =>\n                response.json())\n\n            .then(data => {\n                setOmdbData(data)\n            })\n        }\n        doFetch()\n    }, [triggerNext])\n\n    let title\n    let genre\n    let director\n    let plot\n    let img\n\n    //extract needed info\n    if(userMovieList != ['']) {\n         title = omdbData === 'Loading...' ? omdbData : omdbData.Title\n         genre = omdbData === 'Loading...' || omdbData.Genre === undefined? '' : \"Genre: \" + omdbData.Genre\n         director = omdbData === 'Loading...' || omdbData.Director === undefined? '' : \"Director: \" + omdbData.Director\n         plot = omdbData === 'Loading...' || omdbData.Plot === undefined ? '' : omdbData.Plot\n         img = omdbData === 'Loading...' ? omdbData : omdbData.Poster\n    } else {\n         title = \"Your collection is empty\"\n         genre = ''\n         director = ''\n         plot = ''\n    }\n\n\n    //button right/left click handler\n    function buttonClick(counterChange) {\n        if(counterChange > 0 && counter + counterChange >= userMovieList.length) {\n            setCounter(0);\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading...')\n            return\n        }\n        if(counterChange < 0 && counter + counterChange < 0) {\n            setCounter(userMovieList.length - 1)\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading...')\n            return\n        }\n        setCounter(counter + counterChange)\n        setTriggerNext(triggerNext+1)\n        setOmdbData('Loading...')\n    }\n\n    return (\n        <div>\n        //changed button to Button\n            // <Button onClick = {() => {history.push('/')}}>Back</Button>\n            // <Button onClick = {() =>buttonClick(-1)}>{'<'}</Button>\n            // <Button onClick = {() => buttonClick(1)}>{'>'}</Button>\n            <Button onClick = {() => {history.push('/addMovie')}}>To Search</Button>\n\n            // <div>\n            //     <img src = {img} ></img>\n            //     <h1>{title}</h1>\n            //     <h3>{genre}</h3>\n            //     <h3>{director}</h3>\n            //     <p>{plot}</p>\n            // </div>\n          <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src={img} />\n\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                  <Card.Text>\n                    {genre}\n                  </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>{director}</ListGroupItem>\n              <ListGroupItem>{plot}</ListGroupItem>\n\n            </ListGroup>\n\n            <Card.Body>\n            <Button onClick = {() => {history.push('/')}}>Back</Button>\n            <Button onClick = {() =>buttonClick(-1)}>{'<'}</Button>\n            <Button onClick = {() => buttonClick(1)}>{'>'}</Button>\n            </Card.Body>\n          </Card>\n\n\n\n        </div>\n    )\n}\n\nexport default MovieCollection\n"]},"metadata":{},"sourceType":"module"}