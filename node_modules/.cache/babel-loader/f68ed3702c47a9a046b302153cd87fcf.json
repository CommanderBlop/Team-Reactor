{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase';\nimport AuthContext from './Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\n\nfunction Friends() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState();\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (!user) return;\n    let friendList;\n    let friendsBuilder = [];\n    firebase.db.collection('user').doc(user.id).get().then(function (doc) {\n      friendList = doc.data().friends;\n    }).then(function () {\n      friendList.forEach((friend, index) => {\n        firebase.db.collection('user').doc(friend).get().then(function (doc) {\n          setFriends(friendsBuilder.push(doc.data()));\n        });\n      });\n      setLoading(false);\n    });\n  }, [user]);\n  let localDisplay = 'loading...';\n\n  if (!loading) {\n    friends.map((friend, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      }, friend.name);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, localDisplay);\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Friends","firebase","user","setUser","friends","setFriends","loading","setLoading","auth","onAuthStateChanged","friendList","friendsBuilder","db","collection","doc","id","get","then","data","forEach","friend","index","push","localDisplay","map","name"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAMC,QAAQ,GAAGX,UAAU,CAACG,eAAD,CAA3B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AAEAU,EAAAA,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCP,IAAI,IAAI;AACrC,QAAIA,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GAND;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,IAAL,EAAW;AACX,QAAIQ,UAAJ;AACA,QAAIC,cAAc,GAAG,EAArB;AACAV,IAAAA,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCZ,IAAI,CAACa,EAAxC,EAA4CC,GAA5C,GAAkDC,IAAlD,CAAuD,UAAUH,GAAV,EAAe;AAClEJ,MAAAA,UAAU,GAAGI,GAAG,CAACI,IAAJ,GAAWd,OAAxB;AACH,KAFD,EAEGa,IAFH,CAEQ,YAAY;AAChBP,MAAAA,UAAU,CAACS,OAAX,CAAmB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClCpB,QAAAA,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCM,MAAnC,EAA2CJ,GAA3C,GAAiDC,IAAjD,CAAsD,UAAUH,GAAV,EAAe;AACjET,UAAAA,UAAU,CAACM,cAAc,CAACW,IAAf,CAAoBR,GAAG,CAACI,IAAJ,EAApB,CAAD,CAAV;AACH,SAFD;AAGH,OAJD;AAKAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATD;AAWH,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;AAiBA,MAAIqB,YAAY,GAAG,YAAnB;;AAEA,MAAI,CAACjB,OAAL,EAAa;AACTF,IAAAA,OAAO,CAACoB,GAAR,CAAY,CAACJ,MAAD,EAASC,KAAT,KAAmB;AAC3B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,MAAM,CAACK,IAAX,CAAP;AACH,KAFD;AAGH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,YAAJ,CADJ;AAGH;;AAED,eAAevB,OAAf","sourcesContent":["\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\n\nfunction Friends() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [friends, setFriends] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (!user) return\n        let friendList\n        let friendsBuilder = []\n        firebase.db.collection('user').doc(user.id).get().then(function (doc) {\n            friendList = doc.data().friends\n        }).then(function () {\n            friendList.forEach((friend, index) => {\n                firebase.db.collection('user').doc(friend).get().then(function (doc) {\n                    setFriends(friendsBuilder.push(doc.data()))\n                })\n            })\n            setLoading(false)\n        }\n        )\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading){\n        friends.map((friend, index) => {\n            return <p>{friend.name}</p>\n        })\n    }\n    \n\n    return (\n        <p>{localDisplay}</p>\n    )\n}\n\nexport default Friends"]},"metadata":{},"sourceType":"module"}