{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase';\nimport AuthContext from './Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { Card } from 'react-bootstrap';\n\nfunction Friends() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState();\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (user) {\n      let friendList;\n      let friendsBuilder = [];\n      firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n        friendList = doc.data().friends;\n      }).then(function () {\n        let count = 0;\n        friendList.forEach((friend, index) => {\n          firebase.db.collection('user').doc(friend).get().then(function (doc) {\n            friendsBuilder.push(doc.data());\n          }).then();\n        });\n        setFriends(friendsBuilder);\n      }).then(function () {\n        setLoading(false);\n      });\n    }\n  }, [user]);\n  let localDisplay = 'loading...';\n\n  if (!loading) {\n    console.log(friends);\n    localDisplay = friends.map((friend, index) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, friend.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, friend.insta && friend.insta), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, friend.snap && friend.snap));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, localDisplay));\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Card","Friends","firebase","user","setUser","friends","setFriends","loading","setLoading","auth","onAuthStateChanged","friendList","friendsBuilder","db","collection","doc","uid","get","then","data","count","forEach","friend","index","push","localDisplay","console","log","map","name","insta","snap"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAMC,QAAQ,GAAGZ,UAAU,CAACG,eAAD,CAA3B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AAEAW,EAAAA,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCP,IAAI,IAAI;AACrC,QAAIA,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GAND;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,IAAJ,EAAS;AACL,UAAIQ,UAAJ;AACA,UAAIC,cAAc,GAAG,EAArB;AACAV,MAAAA,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCZ,IAAI,CAACa,GAAxC,EAA6CC,GAA7C,GAAmDC,IAAnD,CAAwD,UAAUH,GAAV,EAAe;AACnEJ,QAAAA,UAAU,GAAGI,GAAG,CAACI,IAAJ,GAAWd,OAAxB;AACH,OAFD,EAEGa,IAFH,CAEQ,YAAY;AAChB,YAAIE,KAAK,GAAG,CAAZ;AACAT,QAAAA,UAAU,CAACU,OAAX,CAAmB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClCrB,UAAAA,QAAQ,CAACW,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCO,MAAnC,EAA2CL,GAA3C,GAAiDC,IAAjD,CAAsD,UAAUH,GAAV,EAAe;AACjEH,YAAAA,cAAc,CAACY,IAAf,CAAoBT,GAAG,CAACI,IAAJ,EAApB;AACH,WAFD,EAEGD,IAFH;AAGH,SAJD;AAKAZ,QAAAA,UAAU,CAACM,cAAD,CAAV;AACH,OAVD,EAUGM,IAVH,CAUQ,YAAU;AACdV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAZD;AAaH;AACJ,GAlBQ,EAkBN,CAACL,IAAD,CAlBM,CAAT;AAoBA,MAAIsB,YAAY,GAAG,YAAnB;;AAEA,MAAI,CAAClB,OAAL,EAAa;AACTmB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AACAoB,IAAAA,YAAY,GAAGpB,OAAO,CAACuB,GAAR,CAAY,CAACN,MAAD,EAASC,KAAT,KAAmB;AAC1C,0BACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,MAAM,CAACO,IAApB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIP,MAAM,CAACQ,KAAP,IAAgBR,MAAM,CAACQ,KAA3B,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIR,MAAM,CAACS,IAAP,IAAeT,MAAM,CAACS,IAA1B,CAHJ,CADJ;AAOH,KARc,CAAf;AASH;;AAGD,sBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,YAAJ,CADA,CADJ;AAKH;;AAED,eAAexB,OAAf","sourcesContent":["\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card } from 'react-bootstrap'\n\nfunction Friends() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [friends, setFriends] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user){\n            let friendList\n            let friendsBuilder = []\n            firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n                friendList = doc.data().friends\n            }).then(function () {\n                let count = 0\n                friendList.forEach((friend, index) => {\n                    firebase.db.collection('user').doc(friend).get().then(function (doc) {\n                        friendsBuilder.push(doc.data())\n                    }).then()\n                })\n                setFriends(friendsBuilder)\n            }).then(function(){\n                setLoading(false)\n            })\n        }\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading){\n        console.log(friends)\n        localDisplay = friends.map((friend, index) => {\n            return(\n                <Card>\n                    <Card.Title>{friend.name}</Card.Title>\n                    <p>{friend.insta && friend.insta}</p>\n                    <p>{friend.snap && friend.snap}</p>\n                </Card>\n            ) \n        })\n    }\n    \n\n    return (\n        <>\n        <p>{localDisplay}</p>\n        </>\n    )\n}\n\nexport default Friends"]},"metadata":{},"sourceType":"module"}