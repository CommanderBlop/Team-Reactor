{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/ShowPost/ShowPost.js\";\n//\n// import React, { useContext, useState, useEffect } from \"react\";\n// import FirebaseContext from '../Firebase'\n// import AuthContext from '../Firebase/AuthContext'\n// import { Link, useHistory } from 'react-router-dom'\n// import { Formik, Form, Field } from 'formik'\n// import { Card } from 'react-bootstrap'\n// import PostCard from './PostCard'\n// import AddFriendModal from '../AddFriendModal'\n//\n// function ShowPost() {\n//     const firebase = useContext(FirebaseContext)\n//     const [user, setUser] = useState()\n//     const [posts, setPosts] = useState([])\n//     const [loading, setLoading] = useState(true)\n//\n//     firebase.auth.onAuthStateChanged(user => {\n//         if (user) {\n//             setUser(user);\n//         } else {\n//             setUser(null)\n//         }\n//     });\n//\n//     useEffect(() => {\n//         if (user) {\n//             let postsBuilder = []\n//             firebase.db.collection('post').get().then(function (querySnapshot) {\n//                 querySnapshot.forEach(post => {\n//                     let postHolder = post.data()\n//                     postHolder.id = post.id\n//                     postsBuilder.push(postHolder)\n//                 })\n//                 setPosts(postsBuilder)\n//             }).then(function () {\n//                 // console.log(postsBuilder)\n//                 setLoading(false)\n//\n//             }).catch(function (error) {\n//                 alert(error)\n//             })\n//\n//         }\n//     }, [user])\n//\n//     let localDisplay = 'loading...'\n//\n//     if (!loading) {\n//         console.log(posts)\n//         localDisplay = posts.map((post, index) => {\n//             return (\n//                 <PostCard\n//                     user={post.user}\n//                     title={post.title}\n//                     content={post.content}\n//                     comments={post.comments}\n//                     id={post.id}\n//                     currentUser={user.uid}\n//                 />\n//             )\n//         })\n//     }\n//\n//\n//     return (\n//         <>\n//             <p className=\"center-all-post\">{localDisplay}</p>\n//             {/* <AddFriendModal id=\"5gd1zjFxT8a49wVFXIER3LkKfck2\"/> */}\n//         </>\n//     )\n// }\n//\n// export default ShowPost\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase';\nimport AuthContext from '../Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { Card } from 'react-bootstrap';\nimport PostCard from './PostCard';\nimport AddFriendModal from '../AddFriendModal';\n\nfunction ShowPost() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (user) {\n      let postsBuilder = [];\n      firebase.db.collection('post').get().then(function (querySnapshot) {\n        querySnapshot.forEach(post => {\n          let postHolder = post.data();\n          postHolder.id = post.id;\n          postsBuilder.push(postHolder);\n        });\n        setPosts(postsBuilder);\n      }).then(function () {\n        // console.log(postsBuilder)\n        setLoading(false);\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }, [user]);\n  let localDisplay = 'loading...';\n\n  if (!loading) {\n    console.log(posts);\n    localDisplay = posts.map((post, index) => {\n      return /*#__PURE__*/React.createElement(PostCard, {\n        user: post.user,\n        title: post.title,\n        content: post.content,\n        comments: post.comments,\n        id: post.id,\n        currentUser: user.uid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, localDisplay));\n}\n\nexport default ShowPost;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/ShowPost/ShowPost.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Card","PostCard","AddFriendModal","ShowPost","firebase","user","setUser","posts","setPosts","loading","setLoading","auth","onAuthStateChanged","postsBuilder","db","collection","get","then","querySnapshot","forEach","post","postHolder","data","id","push","catch","error","alert","localDisplay","console","log","map","index","title","content","comments","uid"],"mappings":"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","sourcesContent":["//\n// import React, { useContext, useState, useEffect } from \"react\";\n// import FirebaseContext from '../Firebase'\n// import AuthContext from '../Firebase/AuthContext'\n// import { Link, useHistory } from 'react-router-dom'\n// import { Formik, Form, Field } from 'formik'\n// import { Card } from 'react-bootstrap'\n// import PostCard from './PostCard'\n// import AddFriendModal from '../AddFriendModal'\n//\n// function ShowPost() {\n//     const firebase = useContext(FirebaseContext)\n//     const [user, setUser] = useState()\n//     const [posts, setPosts] = useState([])\n//     const [loading, setLoading] = useState(true)\n//\n//     firebase.auth.onAuthStateChanged(user => {\n//         if (user) {\n//             setUser(user);\n//         } else {\n//             setUser(null)\n//         }\n//     });\n//\n//     useEffect(() => {\n//         if (user) {\n//             let postsBuilder = []\n//             firebase.db.collection('post').get().then(function (querySnapshot) {\n//                 querySnapshot.forEach(post => {\n//                     let postHolder = post.data()\n//                     postHolder.id = post.id\n//                     postsBuilder.push(postHolder)\n//                 })\n//                 setPosts(postsBuilder)\n//             }).then(function () {\n//                 // console.log(postsBuilder)\n//                 setLoading(false)\n//\n//             }).catch(function (error) {\n//                 alert(error)\n//             })\n//\n//         }\n//     }, [user])\n//\n//     let localDisplay = 'loading...'\n//\n//     if (!loading) {\n//         console.log(posts)\n//         localDisplay = posts.map((post, index) => {\n//             return (\n//                 <PostCard\n//                     user={post.user}\n//                     title={post.title}\n//                     content={post.content}\n//                     comments={post.comments}\n//                     id={post.id}\n//                     currentUser={user.uid}\n//                 />\n//             )\n//         })\n//     }\n//\n//\n//     return (\n//         <>\n//             <p className=\"center-all-post\">{localDisplay}</p>\n//             {/* <AddFriendModal id=\"5gd1zjFxT8a49wVFXIER3LkKfck2\"/> */}\n//         </>\n//     )\n// }\n//\n// export default ShowPost\n\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase'\nimport AuthContext from '../Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card } from 'react-bootstrap'\nimport PostCard from './PostCard'\nimport AddFriendModal from '../AddFriendModal'\n\nfunction ShowPost() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [posts, setPosts] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user) {\n            let postsBuilder = []\n            firebase.db.collection('post').get().then(function (querySnapshot) {\n                querySnapshot.forEach(post => {\n                    let postHolder = post.data()\n                    postHolder.id = post.id\n                    postsBuilder.push(postHolder)\n                })\n                setPosts(postsBuilder)\n            }).then(function () {\n                // console.log(postsBuilder)\n                setLoading(false)\n\n            }).catch(function (error) {\n                alert(error)\n            })\n\n        }\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading) {\n        console.log(posts)\n        localDisplay = posts.map((post, index) => {\n            return (\n                <PostCard\n                    user={post.user}\n                    title={post.title}\n                    content={post.content}\n                    comments={post.comments}\n                    id={post.id}\n                    currentUser={user.uid}\n                />\n            )\n        })\n    }\n\n\n    return (\n        <>\n            <p>{localDisplay}</p>\n            {/* <AddFriendModal id=\"5gd1zjFxT8a49wVFXIER3LkKfck2\"/> */}\n        </>\n    )\n}\n\nexport default ShowPost\n"]},"metadata":{},"sourceType":"module"}