{"ast":null,"code":"var _jsxFileName = \"/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/ChatBoxComponent/TextBox.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport FirebaseContext from '../../Firebase';\n\nfunction TextBox(props) {\n  const [messageContent, setMessageContent] = useState('');\n  const [messageSent, setMessageSent] = useState(false);\n  const chatID = props.chatID;\n  const user = props.user;\n  const numMessage = props.numMessage;\n  const firebase = useContext(FirebaseContext);\n  var d = new Date();\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    name === 'messageSent' ? setMessageSent(true) : setMessageContent(value);\n  }\n\n  useEffect(() => {\n    firebase.db.collection('messages').doc(chatID).set({\n      numMessage: [d.getTime(), user, messageContent]\n    }).then(function () {\n      console.log('Document successfully written!');\n    }).catch(function (error) {\n      console.error('Error writing document: ', error);\n    });\n    setMessageContent('');\n    setMessageSent(false);\n  }, [messageSent]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: messageContent,\n    name: \"messageContent\",\n    placeholder: \"Type your message...\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    name: \"messageSent\",\n    onClick: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, \"send\"));\n}\n\nexport default TextBox;","map":{"version":3,"sources":["/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/ChatBoxComponent/TextBox.js"],"names":["React","useContext","useEffect","useState","FirebaseContext","TextBox","props","messageContent","setMessageContent","messageSent","setMessageSent","chatID","user","numMessage","firebase","d","Date","handleChange","event","name","value","target","db","collection","doc","set","getTime","then","console","log","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,gBAA5B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACvB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMQ,MAAM,GAAGL,KAAK,CAACK,MAArB;AACA,QAAMC,IAAI,GAAGN,KAAK,CAACM,IAAnB;AACA,QAAMC,UAAU,GAAGP,KAAK,CAACO,UAAzB;AACA,QAAMC,QAAQ,GAAGb,UAAU,CAACG,eAAD,CAA3B;AACA,MAAIW,CAAC,GAAG,IAAIC,IAAJ,EAAR;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAF,IAAAA,IAAI,KAAK,aAAT,GAAyBT,cAAc,CAAC,IAAD,CAAvC,GAAgDF,iBAAiB,CAACY,KAAD,CAAjE;AACA;;AACDlB,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,QAAQ,CAACQ,EAAT,CACEC,UADF,CACa,UADb,EAEEC,GAFF,CAEMb,MAFN,EAGEc,GAHF,CAGM;AACJZ,MAAAA,UAAU,EAAE,CAACE,CAAC,CAACW,OAAF,EAAD,EAAcd,IAAd,EAAoBL,cAApB;AADR,KAHN,EAMEoB,IANF,CAMO,YAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,KARF,EASEC,KATF,CASQ,UAAUC,KAAV,EAAiB;AACvBH,MAAAA,OAAO,CAACG,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACA,KAXF;AAaAvB,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACA,GAhBQ,EAgBN,CAACD,WAAD,CAhBM,CAAT;AAkBA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,KAAK,EAAEF,cAFR;AAGC,IAAA,IAAI,EAAC,gBAHN;AAIC,IAAA,WAAW,EAAC,sBAJb;AAKC,IAAA,QAAQ,EAAEU,YALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAQC;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC,aAA3B;AAAyC,IAAA,OAAO,EAAEA,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARD,CADD;AAcA;;AAED,eAAeZ,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport FirebaseContext from '../../Firebase';\n\nfunction TextBox(props) {\n\tconst [messageContent, setMessageContent] = useState('');\n\tconst [messageSent, setMessageSent] = useState(false);\n\tconst chatID = props.chatID;\n\tconst user = props.user;\n\tconst numMessage = props.numMessage;\n\tconst firebase = useContext(FirebaseContext);\n\tvar d = new Date();\n\n\tfunction handleChange(event) {\n\t\tconst { name, value } = event.target;\n\t\tname === 'messageSent' ? setMessageSent(true) : setMessageContent(value);\n\t}\n\tuseEffect(() => {\n\t\tfirebase.db\n\t\t\t.collection('messages')\n\t\t\t.doc(chatID)\n\t\t\t.set({\n\t\t\t\tnumMessage: [d.getTime(), user, messageContent],\n\t\t\t})\n\t\t\t.then(function () {\n\t\t\t\tconsole.log('Document successfully written!');\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.error('Error writing document: ', error);\n\t\t\t});\n\n\t\tsetMessageContent('');\n\t\tsetMessageSent(false);\n\t}, [messageSent]);\n\n\treturn (\n\t\t<div>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tvalue={messageContent}\n\t\t\t\tname='messageContent'\n\t\t\t\tplaceholder='Type your message...'\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<button type='button' name='messageSent' onClick={handleChange}>\n\t\t\t\tsend\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default TextBox;\n"]},"metadata":{},"sourceType":"module"}