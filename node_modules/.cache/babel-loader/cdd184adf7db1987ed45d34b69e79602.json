{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/DailyRec.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from './Firebase';\nconst API_KEY = \"7d667341\";\n\nfunction DailyRec(props) {\n  let [movieData, setMovieData] = useState({});\n  console.log(props);\n  useEffect(() => {\n    async function matching() {\n      let match = false;\n      console.log(\"enter while loop\");\n\n      while (true) {\n        let randMovieID = '';\n        let i = 0;\n\n        for (i = 0; i < 7; i++) {\n          randMovieID += Math.round(Math.random() * 10).toString();\n        }\n\n        let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY;\n        let response = await fetch(url);\n        let data = await response.json();\n        console.log(data); // setMovieData(\n        //     dataSet = data.Response !== \"False\" && data.Genre.includes(userGenre) && data\n        //     )\n\n        if (data.Response !== \"False\" && data.Genre.includes(props.userGenre) && data.Type === \"movie\") {\n          setMovieData(data);\n          break;\n        } // .then(response => \n        //     response.json())\n        // .then(data => {setMovieData({\n        //     movieData: data.Response && data.genre.includes(userGenre) && data\n        //     })})\n\n\n        console.log(\"finish one loop\");\n      }\n    }\n\n    matching();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, movieData == undefined ? \"Loading today's recommendation\" : ''), /*#__PURE__*/React.createElement(\"img\", {\n    src: movieData.Poster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, movieData.Title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Length: \" + movieData.Length), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Director: \" + movieData.Director), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Plot: \" + movieData.Plot));\n}\n\nexport default DailyRec;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/DailyRec.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","API_KEY","DailyRec","props","movieData","setMovieData","console","log","matching","match","randMovieID","i","Math","round","random","toString","url","response","fetch","data","json","Response","Genre","includes","userGenre","Type","undefined","Poster","Title","Length","Director","Plot"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,MAAMC,OAAO,GAAG,UAAhB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAAxC;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,QAAf,GAA0B;AACtB,UAAIC,KAAK,GAAG,KAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,aAAM,IAAN,EAAY;AACR,YAAIG,WAAW,GAAG,EAAlB;AACA,YAAIC,CAAC,GAAG,CAAR;;AACA,aAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,CAAf,EAAkBA,CAAC,EAAnB,EAAuB;AACnBD,UAAAA,WAAW,IAAIE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,EAA+BC,QAA/B,EAAf;AACH;;AACD,YAAIC,GAAG,GAAG,iCAAiCN,WAAjC,GAA+C,UAA/C,GAA4DT,OAAtE;AACA,YAAIgB,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA1B;AACA,YAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ,EATQ,CAUR;AACA;AACA;;AAEA,YAAGA,IAAI,CAACE,QAAL,KAAkB,OAAlB,IAA6BF,IAAI,CAACG,KAAL,CAAWC,QAAX,CAAoBpB,KAAK,CAACqB,SAA1B,CAA7B,IAAqEL,IAAI,CAACM,IAAL,KAAc,OAAtF,EAA+F;AAC3FpB,UAAAA,YAAY,CACRc,IADQ,CAAZ;AAGA;AACH,SAnBO,CAoBJ;AACA;AACA;AACA;AACA;;;AACJb,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ;;AACDC,IAAAA,QAAQ;AACX,GAjCQ,EAiCN,EAjCM,CAAT;AAoCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,SAAS,IAAIsB,SAAb,GAAyB,gCAAzB,GAA4D,EAAjE,CADJ,eAEI;AAAK,IAAA,GAAG,EAAItB,SAAS,CAACuB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKvB,SAAS,CAACwB,KAAf,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,aAAaxB,SAAS,CAACyB,MAA5B,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,eAAczB,SAAS,CAAC0B,QAA7B,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,WAAU1B,SAAS,CAAC2B,IAAxB,CANJ,CADJ;AAUH;;AAED,eAAe7B,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from './Firebase'\nconst API_KEY = \"7d667341\"\n\nfunction DailyRec(props) {\n    let [movieData, setMovieData] = useState({\n\n    })\n    console.log(props)\n    useEffect(() => {\n        async function matching() {\n            let match = false\n            console.log(\"enter while loop\")\n            while(true) {\n                let randMovieID = ''\n                let i = 0 \n                for(i = 0; i < 7; i++) {\n                    randMovieID += Math.round(Math.random() * 10).toString()\n                }\n                let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY\n                let response = await fetch(url)\n                let data = await response.json()\n                console.log(data)\n                // setMovieData(\n                //     dataSet = data.Response !== \"False\" && data.Genre.includes(userGenre) && data\n                //     )\n                    \n                if(data.Response !== \"False\" && data.Genre.includes(props.userGenre) && data.Type === \"movie\") {\n                    setMovieData(\n                        data\n                    )\n                    break\n                }\n                    // .then(response => \n                    //     response.json())\n                    // .then(data => {setMovieData({\n                    //     movieData: data.Response && data.genre.includes(userGenre) && data\n                    //     })})\n                console.log(\"finish one loop\")\n            }\n        }\n        matching()\n    }, [])\n    \n\n    return (\n        <div>\n            <h1>{movieData == undefined ? \"Loading today's recommendation\" : ''}</h1>\n            <img src = {movieData.Poster} ></img>\n            <h1>{movieData.Title}</h1>\n            <h3>{\"Length: \" + movieData.Length}</h3>\n            <h3>{\"Director: \" +movieData.Director}</h3>\n            <p>{\"Plot: \" +movieData.Plot}</p>\n        </div>\n    )\n}\n\nexport default DailyRec\n\n"]},"metadata":{},"sourceType":"module"}