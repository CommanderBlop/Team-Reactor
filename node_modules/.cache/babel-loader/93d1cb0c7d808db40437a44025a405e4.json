{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport FirebaseContext from '../Firebase';\nimport { Card, Button, Collapse, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport \"./collection.css\";\nconst API_KEY = \"7d667341\"; // function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response =>\n//                 response.json())\n//             .then(data => {\n//                 return data\n//             })\n// }\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n  const history = useHistory();\n  const [dataSet, setDataSet] = useState({\n    movieName: '',\n    upload: false,\n    title: '',\n    genre: '',\n    year: '',\n    director: '',\n    length: '',\n    plot: '',\n    resultID: '',\n    img: '',\n    data: '',\n    response: false\n  });\n\n  function nameInput(event) {\n    setDataSet({\n      movieName: event.target.value.trim()\n    });\n  }\n\n  function handleSearch() {\n    console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY);\n    fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY).then(response => response.json()).then(data => {\n      setDataSet({\n        response: data.Response === \"False\" ? false : true,\n        title: data.Title,\n        year: data.Year,\n        length: data.Runtime,\n        director: data.Director,\n        genre: data.Genre,\n        plot: data.Plot,\n        resultID: data.imdbID,\n        img: data.Poster,\n        movieName: dataSet.movieName\n      });\n      console.log(\"finished search\");\n    });\n    console.log(\"result:\" + dataSet.searchResult);\n  }\n\n  const firebase = useContext(FirebaseContext);\n  const [runSubmit, setRunSubmit] = useState(0);\n\n  function submit() {\n    if (dataSet != null && dataSet.response) {\n      var movieListFire = firebase.db.collection(\"movieTester\").doc(\"testUser\");\n      movieListFire.update({\n        movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n      });\n      firebase.db.collection(\"user\").doc();\n      movieListFire.update({\n        movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n      });\n      console.log(\"successfully added to your list!\");\n    }\n  }\n\n  useEffect(() => {\n    submit();\n  }, [runSubmit]);\n\n  function enterPressed(event) {\n    var code = event.keyCode || event.which;\n\n    if (code === 13) {\n      //13 is the enter keycode\n      handleSearch();\n      setRunSubmit(runSubmit + 1);\n    }\n  } // <p style={{ visibility: dataSet.response ? \"visible\" : \"hidden\" }, { textAlign: 'left' }}>\n  //                 <img src={dataSet.img} ></img>\n  //                 <h1>{dataSet.response && dataSet.title}</h1>\n  //                 {dataSet.response && \"Year: \" + dataSet.year}<br />\n  //                 {dataSet.response && \"Length: \" + dataSet.length}<br />\n  //                 {dataSet.response && \"Director: \" + dataSet.director}<br />\n  //                 {dataSet.response && \"Genre: \" + dataSet.genre}<br />\n  //                 {dataSet.response && dataSet.plot}<br />\n  //             </p>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Search:\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control form-control-lg center-item\",\n    type: \"text\",\n    placeholder: \"Add another movie\",\n    onChange: nameInput,\n    style: {\n      width: 500,\n      height: 100,\n      fontSize: 50\n    },\n    onKeyUp: enterPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 221\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"collection-but\",\n    onClick: () => {\n      history.push('/MovieCollection');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"Back to collection\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"collection-but\",\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"collection-but\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, \"Add to your collection!\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-group\",\n    style: {\n      width: dataSet.response ? \"38rem\" : \"0rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card-img-top\",\n    src: dataSet.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 23\n    }\n  }, dataSet.response && dataSet.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  }, dataSet.response && \"Year: \" + dataSet.year), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }\n  }, dataSet.response && \"Length: \" + dataSet.length), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, dataSet.response && \"Director: \" + dataSet.director), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, dataSet.response && \"Genre: \" + dataSet.genre), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }, dataSet.response && dataSet.plot)))));\n}\n\nexport default MovieFinder;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js"],"names":["React","useContext","useState","useEffect","useHistory","Link","FirebaseContext","Card","Button","Collapse","ListGroup","ListGroupItem","API_KEY","MovieFinder","history","dataSet","setDataSet","movieName","upload","title","genre","year","director","length","plot","resultID","img","data","response","nameInput","event","target","value","trim","handleSearch","console","log","fetch","then","json","Response","Title","Year","Runtime","Director","Genre","Plot","imdbID","Poster","searchResult","firebase","runSubmit","setRunSubmit","submit","movieListFire","db","collection","doc","update","movieID","fb","firestore","FieldValue","arrayUnion","enterPressed","code","keyCode","which","width","height","fontSize","push","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport FirebaseContext from '../Firebase'\nimport { Card, Button, Collapse,ListGroup,ListGroupItem } from 'react-bootstrap'\nimport \"./collection.css\"\n\nconst API_KEY = \"7d667341\"\n\n// function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response =>\n//                 response.json())\n\n//             .then(data => {\n//                 return data\n//             })\n// }\n\n\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n    const history = useHistory()\n    const [dataSet, setDataSet] = useState(\n        {\n            movieName: '',\n            upload: false,\n            title: '',\n            genre: '',\n            year: '',\n            director: '',\n            length: '',\n            plot: '',\n            resultID: '',\n            img: '',\n            data: '',\n            response: false\n        }\n    )\n\n    function nameInput(event) {\n        setDataSet({\n            movieName: event.target.value.trim()\n        })\n    }\n\n    function handleSearch() {\n        console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n        fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n            .then(response =>\n                response.json())\n\n            .then(data => {\n                setDataSet({\n                    response: data.Response === \"False\" ? false : true,\n                    title: data.Title,\n                    year: data.Year,\n                    length: data.Runtime,\n                    director: data.Director,\n                    genre: data.Genre,\n                    plot: data.Plot,\n                    resultID: data.imdbID,\n                    img: data.Poster,\n                    movieName: dataSet.movieName\n                })\n                console.log(\"finished search\")\n            })\n        console.log(\"result:\" + dataSet.searchResult)\n    }\n\n    const firebase = useContext(FirebaseContext)\n    const [runSubmit, setRunSubmit] = useState(0)\n    function submit() {\n        if (dataSet != null && dataSet.response) {\n            var movieListFire = firebase.db.collection(\"movieTester\").doc(\"testUser\")\n            movieListFire.update({\n                movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n            })\n            firebase.db.collection(\"user\").doc()\n            movieListFire.update({\n                movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n            })\n            console.log(\"successfully added to your list!\")\n        }\n    }\n    useEffect(() => {\n        submit()\n\n    }, [runSubmit])\n\n    function enterPressed(event) {\n        var code = event.keyCode || event.which;\n        if (code === 13) { //13 is the enter keycode\n            handleSearch()\n            setRunSubmit(runSubmit + 1)\n        }\n    }\n\n    // <p style={{ visibility: dataSet.response ? \"visible\" : \"hidden\" }, { textAlign: 'left' }}>\n    //                 <img src={dataSet.img} ></img>\n    //                 <h1>{dataSet.response && dataSet.title}</h1>\n    //                 {dataSet.response && \"Year: \" + dataSet.year}<br />\n    //                 {dataSet.response && \"Length: \" + dataSet.length}<br />\n    //                 {dataSet.response && \"Director: \" + dataSet.director}<br />\n    //                 {dataSet.response && \"Genre: \" + dataSet.genre}<br />\n    //                 {dataSet.response && dataSet.plot}<br />\n    //             </p>\n\n\n    return (\n        <div>\n            <Card className=\"text-center\" >\n                <Card.Header>Search:</Card.Header>\n\n                <Card.Body>\n\n                  <Card.Text >\n                    <input className=\"form-control form-control-lg center-item\" type=\"text\" placeholder=\"Add another movie\" onChange={nameInput} style={{ width: 500, height: 100, fontSize: 50 }} onKeyUp={enterPressed} /><br />\n                  </Card.Text>\n\n                  <Button className=\"collection-but\" onClick={() => { history.push('/MovieCollection') }}>Back to collection</Button>\n                  <Button className=\"collection-but\" onClick={handleSearch}>Search</Button>\n                  <Button className=\"collection-but\" onClick={submit}>Add to your collection!</Button>\n\n                </Card.Body>\n            </Card>\n            <br />\n                <div className=\"card-group\" style={{ width: dataSet.response ? \"38rem\" : \"0rem\" }}>\n\n                  <div className=\"card\" >\n                    <img className=\"card-img-top\" src={dataSet.img}></img>\n                  </div>\n                  <div className=\"card\" style={{ textAlign: 'left' }}>\n                    <div className=\"card-body\">\n\n                      <h5 className=\"card-title\">{dataSet.response && dataSet.title}</h5>\n                      <p className=\"card-text\">{dataSet.response && \"Year: \" + dataSet.year}</p>\n                      <p className=\"card-text\">{dataSet.response && \"Length: \" + dataSet.length}</p>\n                      <p className=\"card-text\">{dataSet.response && \"Director: \" + dataSet.director}</p>\n                      <p className=\"card-text\">{dataSet.response && \"Genre: \" + dataSet.genre}</p>\n                      <p className=\"card-text\">{dataSet.response && dataSet.plot}</p>\n\n                    </div>\n                  </div>\n                </div>\n\n\n        </div>\n    )\n}\n\nexport default MovieFinder\n"]},"metadata":{},"sourceType":"module"}