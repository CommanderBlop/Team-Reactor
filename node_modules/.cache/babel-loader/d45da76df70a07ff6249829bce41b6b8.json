{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase';\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\"; // props: database idto search for\n\nfunction Home(props) {\n  const id = \"test-main\";\n  const firebase = useContext(FirebaseContext);\n  const [notes, setNotes] = useState([]);\n  var docRef = firebase.db;\n  docRef.collection(\"community-discussion-board\").get().then(querySnapshot => {\n    const data = querySnapshot.docs.map(doc => doc.data());\n    console.log(data); // array of cities objects\n  });\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"content of the community post\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), notes.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Note","CreateArea","Home","props","id","firebase","notes","setNotes","docRef","db","collection","get","then","querySnapshot","data","docs","map","doc","console","log","addNote","newNote","prevNotes","deleteNote","filter","noteItem","index","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAKA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,EAAE,GAAG,WAAX;AACA,QAAMC,QAAQ,GAAGR,UAAU,CAACE,eAAD,CAA3B;AAYA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACF,MAAIY,MAAM,GAAGH,QAAQ,CAACI,EAAtB;AAGED,EAAAA,MAAM,CAACE,UAAP,CAAkB,4BAAlB,EACCC,GADD,GAECC,IAFD,CAEMC,aAAa,IAAI;AACrB,UAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAFqB,CAEF;AACpB,GALD;;AAUA,WAASM,OAAT,CAAiBC,OAAjB,EAA0B;AACxBd,IAAAA,QAAQ,CAACe,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACD,KAFO,CAAR;AAGD;;AAED,WAASE,UAAT,CAAoBnB,EAApB,EAAwB;AACtBG,IAAAA,QAAQ,CAACe,SAAS,IAAI;AACpB,aAAOA,SAAS,CAACE,MAAV,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,eAAOA,KAAK,KAAKtB,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAIE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEgB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGd,KAAK,CAACU,GAAN,CAAU,CAACS,QAAD,EAAWC,KAAX,KAAqB;AAC9B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,KAAK,EAAED,QAAQ,CAACE,KAHlB;AAIE,MAAA,OAAO,EAAEF,QAAQ,CAACG,OAJpB;AAKE,MAAA,QAAQ,EAAEL,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CALH,CADF;AAmBD;;AAED,eAAerB,IAAf","sourcesContent":["import React, { useState, useContext, useEffect} from \"react\";\nimport FirebaseContext from '../Firebase';\n\n\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\n\n\n// props: database idto search for\nfunction Home(props) {\n  const id = \"test-main\";\n  const firebase = useContext(FirebaseContext);\n\n\n\n\n\n\n\n\n\n\n\n  const [notes, setNotes] = useState([]);\nvar docRef = firebase.db;\n\n\n  docRef.collection(\"community-discussion-board\")\n  .get()\n  .then(querySnapshot => {\n    const data = querySnapshot.docs.map(doc => doc.data());\n    console.log(data); // array of cities objects\n  })\n\n\n\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <h1>Movie Title</h1>\n      <p>content of the community post</p>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}