{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase';\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\"; // props: database idto search for\n\nfunction Home(props) {\n  const [notes, setNotes] = useState([]);\n  var docRef = firebase.db.collection(\"community-discussion-board\").doc(\"test-main\");\n  useEffect(docRef.get().then(function (doc) {\n    if (doc.exists) {\n      console.log(\"Document data:\", doc.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  }), []);\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"content of the community post\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), notes.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Note","CreateArea","Home","props","notes","setNotes","docRef","firebase","db","collection","doc","get","then","exists","console","log","data","catch","error","addNote","newNote","prevNotes","deleteNote","id","filter","noteItem","index","map","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAKA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAUnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACF,MAAIU,MAAM,GAAGC,QAAQ,CAACC,EAAT,CAAYC,UAAZ,CAAuB,4BAAvB,EAAqDC,GAArD,CAAyD,WAAzD,CAAb;AACAZ,EAAAA,SAAS,CAEPQ,MAAM,CAACK,GAAP,GAAaC,IAAb,CAAkB,UAASF,GAAT,EAAc;AAC5B,QAAIA,GAAG,CAACG,MAAR,EAAgB;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,GAAG,CAACM,IAAJ,EAA9B;AACH,KAFD,MAEO;AACH;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GAPD,EAOGE,KAPH,CAOS,UAASC,KAAT,EAAgB;AACrBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,KAAvC;AACH,GATD,CAFO,EAWH,EAXG,CAAT;;AAcE,WAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxBf,IAAAA,QAAQ,CAACgB,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACD,KAFO,CAAR;AAGD;;AAED,WAASE,UAAT,CAAoBC,EAApB,EAAwB;AACtBlB,IAAAA,QAAQ,CAACgB,SAAS,IAAI;AACpB,aAAOA,SAAS,CAACG,MAAV,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,eAAOA,KAAK,KAAKH,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAIE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEJ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGf,KAAK,CAACuB,GAAN,CAAU,CAACF,QAAD,EAAWC,KAAX,KAAqB;AAC9B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,KAAK,EAAED,QAAQ,CAACG,KAHlB;AAIE,MAAA,OAAO,EAAEH,QAAQ,CAACI,OAJpB;AAKE,MAAA,QAAQ,EAAEP,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CALH,CADF;AAmBD;;AAED,eAAepB,IAAf","sourcesContent":["import React, { useState, useContext, useEffect} from \"react\";\nimport FirebaseContext from '../Firebase';\n\n\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\n\n\n// props: database idto search for\nfunction Home(props) {\n\n\n\n\n\n\n\n\n\n  const [notes, setNotes] = useState([]);\nvar docRef = firebase.db.collection(\"community-discussion-board\").doc(\"test-main\");\nuseEffect((\n\n  docRef.get().then(function(doc) {\n      if (doc.exists) {\n          console.log(\"Document data:\", doc.data());\n      } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n      }\n  }).catch(function(error) {\n      console.log(\"Error getting document:\", error);\n  })),[])\n\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <h1>Movie Title</h1>\n      <p>content of the community post</p>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}