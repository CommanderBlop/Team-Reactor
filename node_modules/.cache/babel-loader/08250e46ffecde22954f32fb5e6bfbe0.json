{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/DailyRec.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from './Firebase';\nconst API_KEY = \"7d667341\";\n\nfunction DailyRec(userGenre) {\n  let match = false;\n  const [movieData, setMovieData] = useState();\n\n  while (!match) {\n    let randMovieID = '';\n    let i = 0;\n\n    for (i = 0; i < 7; i++) {\n      randMovieID += Math.round(Math.random() * 10).toString();\n    }\n\n    let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY;\n    useEffect(() => {\n      fetch(url).then(response => response.json()).then(data => {\n        setMovieData({\n          movieData: data.Response && data.genre.includes(userGenre) && data\n        });\n      });\n      console.log(\"finished search\");\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, movieData == undefined ? \"Loading today's recommendation\" : ''), /*#__PURE__*/React.createElement(\"img\", {\n    src: movieData.Poster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, movieData.Title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Length: \" + movieData.Length), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Director: \" + movieData.Director), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Plot: \" + movieData.Plot));\n}\n\nexport default DailyRec;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/DailyRec.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","API_KEY","DailyRec","userGenre","match","movieData","setMovieData","randMovieID","i","Math","round","random","toString","url","fetch","then","response","json","data","Response","genre","includes","console","log","undefined","Poster","Title","Length","Director","Plot"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,MAAMC,OAAO,GAAG,UAAhB;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AACzB,MAAIC,KAAK,GAAG,KAAZ;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;;AAEA,SAAM,CAACO,KAAP,EAAc;AACV,QAAIG,WAAW,GAAG,EAAlB;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,CAAf,EAAkBA,CAAC,EAAnB,EAAuB;AACnBD,MAAAA,WAAW,IAAIE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,EAA+BC,QAA/B,EAAf;AACH;;AACD,QAAIC,GAAG,GAAG,iCAAiCN,WAAjC,GAA+C,UAA/C,GAA4DN,OAAtE;AACAH,IAAAA,SAAS,CAAC,MAAM;AACZgB,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IACVA,QAAQ,CAACC,IAAT,EAFJ,EAGCF,IAHD,CAGMG,IAAI,IAAI;AAACZ,QAAAA,YAAY,CAAC;AACxBD,UAAAA,SAAS,EAAEa,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACE,KAAL,CAAWC,QAAX,CAAoBlB,SAApB,CAAjB,IAAmDe;AADtC,SAAD,CAAZ;AAER,OALP;AAMAI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KARQ,CAAT;AASH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,SAAS,IAAImB,SAAb,GAAyB,gCAAzB,GAA4D,EAAjE,CADJ,eAEI;AAAK,IAAA,GAAG,EAAInB,SAAS,CAACoB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpB,SAAS,CAACqB,KAAf,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,aAAarB,SAAS,CAACsB,MAA5B,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,eAActB,SAAS,CAACuB,QAA7B,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,WAAUvB,SAAS,CAACwB,IAAxB,CANJ,CADJ;AAUH;;AAED,eAAe3B,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from './Firebase'\nconst API_KEY = \"7d667341\"\n\nfunction DailyRec(userGenre) {\n    let match = false\n    const [movieData, setMovieData] = useState()\n\n    while(!match) {\n        let randMovieID = ''\n        let i = 0 \n        for(i = 0; i < 7; i++) {\n            randMovieID += Math.round(Math.random() * 10).toString()\n        }\n        let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY\n        useEffect(() => {\n            fetch(url)\n            .then(response => \n                response.json())\n            .then(data => {setMovieData({\n                movieData: data.Response && data.genre.includes(userGenre) && data\n                })})\n            console.log(\"finished search\")\n        })\n    }\n\n    return (\n        <div>\n            <h1>{movieData == undefined ? \"Loading today's recommendation\" : ''}</h1>\n            <img src = {movieData.Poster} ></img>\n            <h1>{movieData.Title}</h1>\n            <h3>{\"Length: \" + movieData.Length}</h3>\n            <h3>{\"Director: \" +movieData.Director}</h3>\n            <p>{\"Plot: \" +movieData.Plot}</p>\n        </div>\n    )\n}\n\nexport default DailyRec\n\n"]},"metadata":{},"sourceType":"module"}