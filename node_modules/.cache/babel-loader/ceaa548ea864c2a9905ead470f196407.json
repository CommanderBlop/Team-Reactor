{"ast":null,"code":"var _jsxFileName = \"/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/Chatbox.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport FirebaseContext from '../Firebase';\n\nfunction Chatbox() {\n  /*\n  constructor(props) {\n  \tsuper(props);\n  \t\tthis.state = {\n  \t\tchatID: 'T5O5rvqkXjOTTNzgClyK',\n  \t\tchats: [],\n  \t};\n  \t\tthis.getData = this.getData.bind(this);\n     }\n     */\n  const [chatID, setChatID] = useState('T5O5rvqkXjOTTNzgClyK');\n  const [chats, setChats] = useState(['']);\n  const firebase = useContext(FirebaseContext);\n  const chatMessages = firebase.db.collection('messages').doc(chatID);\n\n  function getData() {\n    chatMessages.get().then(function (doc) {\n      if (doc.exists) {\n        console.log('There is such document!');\n        return doc.data();\n      } else {\n        // doc.data() will be undefined in this case\n        console.log('No such document!');\n      }\n    }).catch(function (error) {\n      console.log('Error getting document:', error);\n    });\n  }\n\n  useEffect(() => {\n    let data = getData();\n  }, []);\n  /*\n  \tchatRef.on('value', (snapshot) => {\n  \t\tconst getChats = snapshot.val();\n  \t\tlet ascChats = [];\n  \t\tfor (let chat in getChats) {\n  \t\t\tif (getChats[chat].message !== '') {\n  \t\t\t\tascChats.push({\n  \t\t\t\t\tid: chat,\n  \t\t\t\t\tmessage: getChats[chat].message,\n  \t\t\t\t\tuser: getChats[chat].user,\n  \t\t\t\t\tdate: getChats[chat].timestamp,\n  \t\t\t\t});\n  \t\t\t}\n  \t\t}\n  \t\tconst chats = ascChats.reverse();\n  \t\tthis.setState({ chats });\n  \t});*/\n\n  /*\n  render() {\n  \treturn (\n  \t\t<div className='chatbox'>\n  \t\t\t<ul className='chat-list'>\n  \t\t\t\t{this.state.chats.map((chat) => {\n  \t\t\t\t\tconst postDate = new Date(chat.date);\n  \t\t\t\t\treturn (\n  \t\t\t\t\t\t<li key={chat.id}>\n  \t\t\t\t\t\t\t<em>{postDate.getDate() + '/' + (postDate.getMonth() + 1)}</em>\n  \t\t\t\t\t\t\t<strong>{chat.user}:</strong>\n  \t\t\t\t\t\t\t{chat.message}\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t);\n  \t\t\t\t})}\n  \t\t\t</ul>\n  \t\t</div>\n  \t);\n     }\n     */\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"hi\");\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/Chatbox.js"],"names":["React","useContext","useEffect","useState","FirebaseContext","Chatbox","chatID","setChatID","chats","setChats","firebase","chatMessages","db","collection","doc","getData","get","then","exists","console","log","data","catch","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,SAASC,OAAT,GAAmB;AAClB;;;;;;;;;;AAYA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,sBAAD,CAApC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AACA,QAAMO,QAAQ,GAAGT,UAAU,CAACG,eAAD,CAA3B;AACA,QAAMO,YAAY,GAAGD,QAAQ,CAACE,EAAT,CAAYC,UAAZ,CAAuB,UAAvB,EAAmCC,GAAnC,CAAuCR,MAAvC,CAArB;;AACA,WAASS,OAAT,GAAmB;AAClBJ,IAAAA,YAAY,CACVK,GADF,GAEEC,IAFF,CAEO,UAAUH,GAAV,EAAe;AACpB,UAAIA,GAAG,CAACI,MAAR,EAAgB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,eAAON,GAAG,CAACO,IAAJ,EAAP;AACA,OAHD,MAGO;AACN;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AACD,KAVF,EAWEE,KAXF,CAWQ,UAAUC,KAAV,EAAiB;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCG,KAAvC;AACA,KAbF;AAcA;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAImB,IAAI,GAAGN,OAAO,EAAlB;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;AAoBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACD,eAAeV,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport FirebaseContext from '../Firebase';\n\nfunction Chatbox() {\n\t/*\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tchatID: 'T5O5rvqkXjOTTNzgClyK',\n\t\t\tchats: [],\n\t\t};\n\n\t\tthis.getData = this.getData.bind(this);\n    }\n    */\n\tconst [chatID, setChatID] = useState('T5O5rvqkXjOTTNzgClyK');\n\tconst [chats, setChats] = useState(['']);\n\tconst firebase = useContext(FirebaseContext);\n\tconst chatMessages = firebase.db.collection('messages').doc(chatID);\n\tfunction getData() {\n\t\tchatMessages\n\t\t\t.get()\n\t\t\t.then(function (doc) {\n\t\t\t\tif (doc.exists) {\n\t\t\t\t\tconsole.log('There is such document!');\n\t\t\t\t\treturn doc.data();\n\t\t\t\t} else {\n\t\t\t\t\t// doc.data() will be undefined in this case\n\t\t\t\t\tconsole.log('No such document!');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log('Error getting document:', error);\n\t\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tlet data = getData();\n\t}, []);\n\n\t/*\n\t\tchatRef.on('value', (snapshot) => {\n\t\t\tconst getChats = snapshot.val();\n\t\t\tlet ascChats = [];\n\t\t\tfor (let chat in getChats) {\n\t\t\t\tif (getChats[chat].message !== '') {\n\t\t\t\t\tascChats.push({\n\t\t\t\t\t\tid: chat,\n\t\t\t\t\t\tmessage: getChats[chat].message,\n\t\t\t\t\t\tuser: getChats[chat].user,\n\t\t\t\t\t\tdate: getChats[chat].timestamp,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst chats = ascChats.reverse();\n\t\t\tthis.setState({ chats });\n\t\t});*/\n\t/*\n\trender() {\n\t\treturn (\n\t\t\t<div className='chatbox'>\n\t\t\t\t<ul className='chat-list'>\n\t\t\t\t\t{this.state.chats.map((chat) => {\n\t\t\t\t\t\tconst postDate = new Date(chat.date);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={chat.id}>\n\t\t\t\t\t\t\t\t<em>{postDate.getDate() + '/' + (postDate.getMonth() + 1)}</em>\n\t\t\t\t\t\t\t\t<strong>{chat.user}:</strong>\n\t\t\t\t\t\t\t\t{chat.message}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n    }\n    */\n\treturn <h1>hi</h1>;\n}\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}