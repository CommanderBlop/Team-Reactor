{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Genre.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase';\nimport AuthContext from './Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { Card } from 'react-bootstrap';\n\nfunction Genre() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState();\n  const [genres, setGenres] = useState([]);\n  const [loading, setLoading] = useState(true);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (user) {\n      let friendList;\n      let friendsBuilder = [];\n      let count = 0;\n      firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n        friendList = doc.data().friends;\n      }).then(function () {\n        friendList.forEach((friend, index) => {\n          firebase.db.collection('user').doc(friend).get().then(function (doc) {\n            friendsBuilder.push(doc.data());\n            count++;\n\n            if (count === friendList.length) {\n              setLoading(false);\n            }\n          });\n        });\n        setFriends(friendsBuilder);\n      });\n    }\n  }, [user]); // let localDisplay = 'loading...'\n  // if (!loading) {\n  //     // console.log(friends)\n  //     localDisplay = friends.map((friend, index) => {\n  //         return (\n  //             <Card>\n  //                 <Card.Title>{friend.name}</Card.Title>\n  //                 <p>{friend.insta && friend.insta}</p>\n  //                 <p>{friend.snap && friend.snap}</p>\n  //             </Card>\n  //         )\n  //     })\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    id: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: 'checkbox',\n    id: 'action',\n    label: 'Action',\n    checked: genres.includes('action'),\n    onChange: genres.includes('action') ? () => {\n      setGenres(genres.filter(filter => filter !== 'action'));\n    } : () => {\n      setFilters(filters.concat('region1'));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: 'checkbox',\n    id: 'region2',\n    label: 'Region 2',\n    checked: filters.includes('region2'),\n    onChange: filters.includes('region2') ? () => {\n      setFilters(filters.filter(filter => filter !== 'region2'));\n    } : () => {\n      setFilters(filters.concat('region2'));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    type: 'checkbox',\n    id: 'region3',\n    label: 'Region 3',\n    checked: filters.includes('region3'),\n    onChange: filters.includes('region3') ? () => {\n      setFilters(filters.filter(filter => filter !== 'region3'));\n    } : () => {\n      setFilters(filters.concat('region3'));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Genre;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Genre.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Card","Genre","firebase","user","setUser","genres","setGenres","loading","setLoading","auth","onAuthStateChanged","friendList","friendsBuilder","count","db","collection","doc","uid","get","then","data","friends","forEach","friend","index","push","length","setFriends","includes","filter","setFilters","filters","concat"],"mappings":"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","sourcesContent":["\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card } from 'react-bootstrap'\n\nfunction Genre() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [genres, setGenres] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user) {\n            let friendList\n            let friendsBuilder = []\n            let count = 0\n            firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n                friendList = doc.data().friends\n            }).then(function () {\n                friendList.forEach((friend, index) => {\n                    firebase.db.collection('user').doc(friend).get().then(function (doc) {\n                        friendsBuilder.push(doc.data())\n                        count++\n                        if (count === friendList.length) {\n                            setLoading(false)\n                        }\n                    })\n                })\n                setFriends(friendsBuilder)\n            })\n        }\n    }, [user])\n\n    // let localDisplay = 'loading...'\n\n    // if (!loading) {\n    //     // console.log(friends)\n    //     localDisplay = friends.map((friend, index) => {\n    //         return (\n    //             <Card>\n    //                 <Card.Title>{friend.name}</Card.Title>\n    //                 <p>{friend.insta && friend.insta}</p>\n    //                 <p>{friend.snap && friend.snap}</p>\n    //             </Card>\n    //         )\n    //     })\n    // }\n\n\n    return (\n        <>\n            <Form id=\"genre\">\n                <Form.Check\n                    type={'checkbox'}\n                    id={'action'}\n                    label={'Action'}\n                    checked={genres.includes('action')}\n                    onChange={genres.includes('action') ? () => {\n                        setGenres(genres.filter(filter => filter !== 'action'))\n                    } : () => {\n                        setFilters(filters.concat('region1'))\n                    }}\n                />\n                <Form.Check\n                    type={'checkbox'}\n                    id={'region2'}\n                    label={'Region 2'}\n                    checked={filters.includes('region2')}\n                    onChange={filters.includes('region2') ? () => {\n                        setFilters(filters.filter(filter => filter !== 'region2'))\n                    } : () => {\n                        setFilters(filters.concat('region2'))\n                    }}\n                />\n                <Form.Check\n                    type={'checkbox'}\n                    id={'region3'}\n                    label={'Region 3'}\n                    checked={filters.includes('region3')}\n                    onChange={filters.includes('region3') ? () => {\n                        setFilters(filters.filter(filter => filter !== 'region3'))\n                    } : () => {\n                        setFilters(filters.concat('region3'))\n                    }}\n                />\n            </Form>\n\n        </>\n    )\n}\n\nexport default Genre"]},"metadata":{},"sourceType":"module"}