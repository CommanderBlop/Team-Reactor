{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Post.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase';\nimport AuthContext from './Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { Card } from 'react-bootstrap';\n\nfunction Post() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState(null);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      post: '',\n      title: ''\n    },\n    onSubmit: values => {\n      firebase.db.collection('post').add({\n        title: values.title,\n        content: values.content,\n        user: user.uid,\n        likes: 0,\n        comments: []\n      }).then(alert(\"Posted!\")).catch(error => alert(error));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Movie/Seires/Show Title: \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 62\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: \"input\",\n    name: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Content: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    as: \"textarea\",\n    name: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Post\"))));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Post.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Card","Post","firebase","user","setUser","auth","onAuthStateChanged","post","title","values","db","collection","add","content","uid","likes","comments","then","alert","catch","error"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAMC,QAAQ,GAAGZ,UAAU,CAACG,eAAD,CAA3B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;AAEAW,EAAAA,QAAQ,CAACG,IAAT,CAAcC,kBAAd,CAAiCH,IAAI,IAAI;AACrC,QAAIA,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GAND;AAQA,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEG,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KADnB;AAEI,IAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBP,MAAAA,QAAQ,CAACQ,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmC;AAC/BJ,QAAAA,KAAK,EAAEC,MAAM,CAACD,KADiB;AAE/BK,QAAAA,OAAO,EAAEJ,MAAM,CAACI,OAFe;AAG/BV,QAAAA,IAAI,EAAEA,IAAI,CAACW,GAHoB;AAI/BC,QAAAA,KAAK,EAAE,CAJwB;AAK/BC,QAAAA,QAAQ,EAAE;AALqB,OAAnC,EAMGC,IANH,CAOIC,KAAK,CAAC,SAAD,CAPT,EAQEC,KARF,CAQQC,KAAK,IAAIF,KAAK,CAACE,KAAD,CARtB;AASH,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,oBAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7C,eAEI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,oBAEqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrC,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAG4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH5B,eAII,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,oBAIuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJvC,eAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,CAdJ,CADJ,CADJ;AA0BH;;AAED,eAAenB,IAAf","sourcesContent":["\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card } from 'react-bootstrap'\n\nfunction Post() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState(null)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    return (\n        <>\n            <Formik\n                initialValues={{ post: '', title: '' }}\n                onSubmit={(values) => {\n                    firebase.db.collection('post').add({\n                        title: values.title, \n                        content: values.content, \n                        user: user.uid, \n                        likes: 0, \n                        comments: [], \n                    }).then(\n                        alert(\"Posted!\")\n                    ).catch(error => alert(error))\n                }}\n            >\n                <Form>\n                    <label>Movie/Seires/Show Title: </label> <br/>\n                    <Field as=\"input\" name=\"title\"/> <br/>\n                    <label>Content: </label><br/>\n                    <Field as=\"textarea\" name=\"post\"/> <br/>\n                    <button type=\"submit\">Post</button>\n                </Form>\n            </Formik>\n        </>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}