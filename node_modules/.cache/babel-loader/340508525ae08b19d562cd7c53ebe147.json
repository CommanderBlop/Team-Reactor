{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js\";\nimport React from 'react';\nimport FirebaseContext from '../Firebase';\nconst API_KEY = \"7d667341\"; // function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response => \n//                 response.json())\n//             .then(data => {\n//                 return data\n//             })\n// }\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n\nclass MovieFinder extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movieName: '',\n      upload: false,\n      title: '',\n      genre: '',\n      year: '',\n      director: '',\n      length: '',\n      plot: '',\n      resultID: '',\n      img: '',\n      data: '',\n      response: false\n    };\n    this.nameInput = this.nameInput.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  nameInput(event) {\n    console.log(\"updating name field\");\n    this.setState({\n      movieName: event.target.value.trim()\n    });\n  }\n\n  handleSearch() {\n    console.log(\"http://www.omdbapi.com/?t=\" + this.state.movieName + \"&apikey=\" + API_KEY);\n    fetch(\"http://www.omdbapi.com/?t=\" + this.state.movieName + \"&apikey=\" + API_KEY).then(response => response.json()).then(data => {\n      this.setState({\n        response: data.Response === \"False\" ? false : true,\n        title: data.Title,\n        year: data.Year,\n        length: data.Runtime,\n        director: data.Director,\n        genre: data.Genre,\n        plot: data.Plot,\n        resultID: data.imdbID,\n        img: data.Poster\n      });\n      console.log(\"finished search\");\n    });\n    console.log(\"result:\" + this.state.searchResult);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add another movie\",\n      onChange: this.nameInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Click to search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Add to your collection!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: ({\n        visibility: this.state.response ? \"visible\" : \"hidden\"\n      }, {\n        textAlign: 'left'\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, this.state.response && this.state.title, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 62\n      }\n    }), this.state.response && \"Year: \" + this.state.year, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 72\n      }\n    }), this.state.response && \"Length: \" + this.state.length, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 76\n      }\n    }), this.state.response && \"Director: \" + this.state.director, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 80\n      }\n    }), this.state.response && \"Genre: \" + this.state.genre, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 74\n      }\n    }), this.state.response && this.state.plot, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.img,\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default MovieFinder;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js"],"names":["React","FirebaseContext","API_KEY","MovieFinder","Component","constructor","state","movieName","upload","title","genre","year","director","length","plot","resultID","img","data","response","nameInput","bind","handleSearch","event","console","log","setState","target","value","trim","fetch","then","json","Response","Title","Year","Runtime","Director","Genre","Plot","imdbID","Poster","searchResult","render","submit","visibility","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FirebaseContext from '../Firebase'\nconst API_KEY = \"7d667341\"\n\n// function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response => \n//                 response.json())\n            \n//             .then(data => {\n//                 return data\n//             })\n// }\n\n\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n\nclass MovieFinder extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            movieName: '',\n            upload: false,\n            title:'',\n            genre:'',\n            year:'',\n            director:'',\n            length:'',\n            plot:'',\n            resultID: '',\n            img: '',\n            data: '',\n            response: false\n        }\n        this.nameInput = this.nameInput.bind(this)\n        this.handleSearch = this.handleSearch.bind(this)\n    }\n\n    nameInput(event) {\n        console.log(\"updating name field\")\n        this.setState({\n            movieName: event.target.value.trim()\n        })\n    }\n\n    handleSearch() {\n        console.log(\"http://www.omdbapi.com/?t=\" + this.state.movieName + \"&apikey=\" + API_KEY)\n        fetch(\"http://www.omdbapi.com/?t=\" + this.state.movieName + \"&apikey=\" + API_KEY)\n            .then(response => \n                response.json())\n            \n            .then(data => {this.setState({\n                response: data.Response === \"False\" ? false : true,\n                title: data.Title,\n                year: data.Year,\n                length: data.Runtime,\n                director: data.Director,\n                genre: data.Genre,\n                plot: data.Plot,\n                resultID : data.imdbID,\n                img : data.Poster\n            })\n            console.log(\"finished search\")})\n            console.log(\"result:\" + this.state.searchResult)\n    }\n\n    render() {\n        return(\n            <div>\n                <form>\n                    <input type=\"text\" placeholder=\"Add another movie\" onChange = {this.nameInput} />\n                </form>\n                \n                <button onClick = {this.handleSearch}>Click to search</button>\n                <button onClick = {this.submit}>Add to your collection!</button>\n                <br/>\n                <p style={{visibility: this.state.response ? \"visible\" : \"hidden\"}, {textAlign: 'left'}}>\n                    {this.state.response && this.state.title}<br/>\n                    {this.state.response && \"Year: \" + this.state.year}<br/>\n                    {this.state.response && \"Length: \" + this.state.length}<br/>\n                    {this.state.response && \"Director: \" + this.state.director}<br/>\n                    {this.state.response && \"Genre: \" + this.state.genre}<br/>\n                    {this.state.response && this.state.plot}<br/>\n                    <img src = {this.state.img} style={{textAlign:'right'}}></img>\n                </p>\n                \n            </div>\n        )\n    }\n}\n\nexport default MovieFinder"]},"metadata":{},"sourceType":"module"}