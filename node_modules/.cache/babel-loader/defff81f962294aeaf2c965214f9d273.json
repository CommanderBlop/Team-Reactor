{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/MovieCollection/MovieCollection.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../Firebase';\nimport { useHistory, Link } from 'react-router-dom';\nimport MovieFinder from './addMovie';\nimport { Card, Button, Collapse, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport \"./collection.css\";\nconst API_KEY = \"7d667341\";\n\nfunction MovieCollection() {\n  //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n  const firebase = useContext(FirebaseContext);\n  const mList = firebase.db.collection(\"movieTester\").doc(\"testUser\");\n  const [userMovieList, setUserMovieList] = useState(['']);\n  const history = useHistory(); //get user movie collection and put it he re\\\n\n  useEffect(() => {\n    mList.get().then(function (doc) {\n      if (doc.exists) {\n        setUserMovieList(doc.data().movieID);\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n        setUserMovieList(['']);\n      }\n\n      setTriggerNext(1);\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }, []); //const [userMovieList, setUserMovieList] = firetbase.db.collection(\"movieTester\").doc(\"testUser\")\n\n  const [counter, setCounter] = useState(0);\n  const [omdbData, setOmdbData] = useState('Loading...');\n  const [triggerNext, setTriggerNext] = useState(0); //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n\n  let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY; //console.log(url)\n  //fetch data\n\n  useEffect(() => {\n    function doFetch() {\n      fetch(url).then(response => response.json()).then(data => {\n        setOmdbData(data);\n      });\n    }\n\n    doFetch();\n  }, [triggerNext]);\n  let title;\n  let genre;\n  let director;\n  let plot;\n  let img; //extract needed info\n\n  if (userMovieList != ['']) {\n    title = omdbData === 'Loading...' ? omdbData : omdbData.Title;\n    genre = omdbData === 'Loading...' || omdbData.Genre === undefined ? '' : \"Genre: \" + omdbData.Genre;\n    director = omdbData === 'Loading...' || omdbData.Director === undefined ? '' : \"Director: \" + omdbData.Director;\n    plot = omdbData === 'Loading...' || omdbData.Plot === undefined ? '' : omdbData.Plot;\n    img = omdbData === 'Loading...' ? omdbData : omdbData.Poster;\n  } else {\n    title = \"Your collection is empty\";\n    genre = '';\n    director = '';\n    plot = '';\n  } //button right/left click handler\n\n\n  function buttonClick(counterChange) {\n    if (counterChange > 0 && counter + counterChange >= userMovieList.length) {\n      setCounter(0);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading...');\n      return;\n    }\n\n    if (counterChange < 0 && counter + counterChange < 0) {\n      setCounter(userMovieList.length - 1);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading...');\n      return;\n    }\n\n    setCounter(counter + counterChange);\n    setTriggerNext(triggerNext + 1);\n    setOmdbData('Loading...');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-group\",\n    style: {\n      width: dataSet.response ? \"38rem\" : \"0rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card-img-top\",\n    src: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }\n  }, genre), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, director), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }, plot)))));\n}\n\nexport default MovieCollection;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/MovieCollection/MovieCollection.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","useHistory","Link","MovieFinder","Card","Button","Collapse","ListGroup","ListGroupItem","API_KEY","MovieCollection","firebase","mList","db","collection","doc","userMovieList","setUserMovieList","history","get","then","exists","data","movieID","console","log","setTriggerNext","catch","error","counter","setCounter","omdbData","setOmdbData","triggerNext","url","toString","doFetch","fetch","response","json","title","genre","director","plot","img","Title","Genre","undefined","Director","Plot","Poster","buttonClick","counterChange","length","width","dataSet","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from '../Firebase'\nimport {useHistory, Link} from 'react-router-dom'\nimport MovieFinder from './addMovie'\nimport { Card, Button, Collapse,ListGroup,ListGroupItem } from 'react-bootstrap'\nimport \"./collection.css\"\n\nconst API_KEY = \"7d667341\"\n\n\n\nfunction MovieCollection() {\n    //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n    const firebase = useContext(FirebaseContext)\n    const mList = firebase.db.collection(\"movieTester\").doc(\"testUser\")\n    const [userMovieList, setUserMovieList] = useState([''])\n    const history = useHistory()\n    //get user movie collection and put it he re\\\n    useEffect(() => {\n        mList.get().then(function(doc) {\n            if (doc.exists) {\n                setUserMovieList(doc.data().movieID)\n                console.log(\"Document data:\", doc.data())\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n                setUserMovieList(['']);\n            }\n            setTriggerNext(1)\n            }).catch(function(error) {\n                console.log(\"Error getting document:\", error);\n            })\n        } ,[]\n    )\n\n    //const [userMovieList, setUserMovieList] = firetbase.db.collection(\"movieTester\").doc(\"testUser\")\n    const [counter, setCounter] = useState(0)\n    const [omdbData, setOmdbData] = useState('Loading...')\n\n    const [triggerNext, setTriggerNext] = useState(0)\n    //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n    let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY\n    //console.log(url)\n\n    //fetch data\n    useEffect(() => {\n        function doFetch() {\n            fetch(url)\n            .then(response =>\n                response.json())\n\n            .then(data => {\n                setOmdbData(data)\n            })\n        }\n        doFetch()\n    }, [triggerNext])\n\n    let title\n    let genre\n    let director\n    let plot\n    let img\n\n    //extract needed info\n    if(userMovieList != ['']) {\n         title = omdbData === 'Loading...' ? omdbData : omdbData.Title\n         genre = omdbData === 'Loading...' || omdbData.Genre === undefined? '' : \"Genre: \" + omdbData.Genre\n         director = omdbData === 'Loading...' || omdbData.Director === undefined? '' : \"Director: \" + omdbData.Director\n         plot = omdbData === 'Loading...' || omdbData.Plot === undefined ? '' : omdbData.Plot\n         img = omdbData === 'Loading...' ? omdbData : omdbData.Poster\n    } else {\n         title = \"Your collection is empty\"\n         genre = ''\n         director = ''\n         plot = ''\n    }\n\n\n    //button right/left click handler\n    function buttonClick(counterChange) {\n        if(counterChange > 0 && counter + counterChange >= userMovieList.length) {\n            setCounter(0);\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading...')\n            return\n        }\n        if(counterChange < 0 && counter + counterChange < 0) {\n            setCounter(userMovieList.length - 1)\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading...')\n            return\n        }\n        setCounter(counter + counterChange)\n        setTriggerNext(triggerNext+1)\n        setOmdbData('Loading...')\n    }\n\n    return (\n  \n        <div>\n\n                <div className=\"card-group\" style={{ width: dataSet.response ? \"38rem\" : \"0rem\" }}>\n\n                  <div className=\"card\" >\n                    <img className=\"card-img-top\" src={img}></img>\n                  </div>\n\n                  <div className=\"card\" style={{ textAlign: 'left' }}>\n                    <div className=\"card-body\">\n\n                      <h5 className=\"card-title\">{title}</h5>\n                      <p className=\"card-text\">{genre}</p>\n                      <p className=\"card-text\">{director}</p>\n                      <p className=\"card-text\">{plot}</p>\n\n\n                    </div>\n                  </div>\n                </div>\n\n        </div>\n    )\n}\n\nexport default MovieCollection\n"]},"metadata":{},"sourceType":"module"}