{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction MovieRec() {\n  //userGenreList = props.userGenreList\n  const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime'];\n  let userMovieList = ['tt4566758', 'tt6723592', 'tt8946378'];\n  const [counter, setCounter] = useState(0); // const [finished, setFinished] = useState(false)\n\n  const [omdbData, setOmdbData] = useState('Loading');\n  const [triggerNext, setTriggerNext] = useState(0);\n  let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)];\n  let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=906b7c64\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setOmdbData(data);\n    });\n  }, [triggerNext]);\n  let title = omdbData === 'Loading' ? omdbData : omdbData.Title;\n  let genre = omdbData === 'Loading' ? '' : \"Genre: \" + omdbData.Genre;\n  let director = omdbData === 'Loading' ? '' : \"Director: \" + omdbData.Director;\n  let plot = omdbData === 'Loading' ? '' : omdbData.Plot;\n\n  function buttonClick(counterChange) {\n    if (counterChange > 0 && counter + counterChange >= userMovieList.length) {\n      console.log(\"counter is now\" + counter);\n      setCounter(0);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading');\n      return;\n    }\n\n    if (counterChange < 0 && counter + counterChange < 0) {\n      console.log(\"counter is now\" + counter);\n      setCounter(userMovieList.length - 1);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading');\n      return;\n    }\n\n    setCounter(counter + counterChange);\n    setTriggerNext(triggerNext + 1);\n    setOmdbData('Loading');\n    console.log(\"counter is now\" + counter);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => buttonClick(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Left\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => buttonClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Right\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, genre), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, director), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, plot), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, counter)));\n}\n\nexport default MovieRec;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection.js"],"names":["React","useState","useEffect","MovieRec","userGenreList","userMovieList","counter","setCounter","omdbData","setOmdbData","triggerNext","setTriggerNext","textToBeDisplayed","Math","round","random","length","url","toString","fetch","then","response","json","data","title","Title","genre","Genre","director","Director","plot","Plot","buttonClick","counterChange","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\n\n\nfunction MovieRec() {\n    //userGenreList = props.userGenreList\n    const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n    let userMovieList = ['tt4566758','tt6723592','tt8946378']\n    const [counter, setCounter] = useState(0)\n    // const [finished, setFinished] = useState(false)\n    const [omdbData, setOmdbData] = useState('Loading')\n    const [triggerNext, setTriggerNext] = useState(0)\n    let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n    let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=906b7c64\"\n    useEffect(() => {\n        fetch(url)\n            .then(response => \n                response.json())\n            \n            .then(data => {\n                setOmdbData(data)\n            })\n    }, [triggerNext])\n    \n    \n    let title = omdbData === 'Loading' ? omdbData : omdbData.Title\n    let genre = omdbData === 'Loading'? '' : \"Genre: \" + omdbData.Genre\n    let director = omdbData === 'Loading'? '' : \"Director: \" + omdbData.Director\n    let plot = omdbData === 'Loading' ? '' : omdbData.Plot\n\n    function buttonClick(counterChange) {\n        if(counterChange > 0 && counter + counterChange >= userMovieList.length) {\n            console.log(\"counter is now\" + counter)\n            setCounter(0);\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading')\n            return \n        }\n        if(counterChange < 0 && counter + counterChange < 0) {\n            console.log(\"counter is now\" + counter)\n            setCounter(userMovieList.length - 1)\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading')\n            return \n        }\n        setCounter(counter + counterChange)\n        setTriggerNext(triggerNext+1)\n        setOmdbData('Loading')\n        console.log(\"counter is now\" + counter)\n    }\n    \n    return (\n        <div>\n            <button>Back</button>\n            <button onClick = {() =>buttonClick(-1)}>Left</button>\n            <button onClick = {() => buttonClick(1)}>Right</button>\n            <div>\n                <h1>{title}</h1>\n                <h3>{genre}</h3>\n                <h3>{director}</h3>\n                <p>{plot}</p>\n                <p>{counter}</p>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default MovieRec"]},"metadata":{},"sourceType":"module"}