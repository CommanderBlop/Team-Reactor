{"ast":null,"code":"var _jsxFileName = \"/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/Chatbox.js\";\nimport React from 'react';\nimport firebase from '../Firebase';\n\nclass Chatbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chats: []\n    };\n  }\n  /*\n  componentDidMount() {\n  \tconst chatRef = firebase.database().ref('general');\n  \tchatRef.on('value', (snapshot) => {\n  \t\tconst getChats = snapshot.val();\n  \t\tlet ascChats = [];\n  \t\tfor (let chat in getChats) {\n  \t\t\tif (getChats[chat].message !== '') {\n  \t\t\t\tascChats.push({\n  \t\t\t\t\tid: chat,\n  \t\t\t\t\tmessage: getChats[chat].message,\n  \t\t\t\t\tuser: getChats[chat].user,\n  \t\t\t\t\tdate: getChats[chat].timestamp,\n  \t\t\t\t});\n  \t\t\t}\n  \t\t}\n  \t\tconst chats = ascChats.reverse();\n  \t\tthis.setState({ chats });\n  \t});\n     }\n     */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"chat-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, this.state.chats.map(chat => {\n      const postDate = new Date(chat.date);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: chat.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, postDate.getDate() + '/' + (postDate.getMonth() + 1)), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, chat.user, \":\"), chat.message);\n    })));\n  }\n\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/Chatbox.js"],"names":["React","firebase","Chatbox","Component","constructor","props","state","chats","render","map","chat","postDate","Date","date","id","getDate","getMonth","user","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAGA;AACD;;;;;;;;;;;;;;;;;;;;;;;AAqBAC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,GAAjB,CAAsBC,IAAD,IAAU;AAC/B,YAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,IAAd,CAAjB;AACA,0BACC;AAAI,QAAA,GAAG,EAAEH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,QAAQ,CAACI,OAAT,KAAqB,GAArB,IAA4BJ,QAAQ,CAACK,QAAT,KAAsB,CAAlD,CAAL,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASN,IAAI,CAACO,IAAd,MAFD,EAGEP,IAAI,CAACQ,OAHP,CADD;AAOA,KATA,CADF,CADD,CADD;AAgBA;;AA7CoC;;AA+CtC,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport firebase from '../Firebase';\n\nclass Chatbox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchats: [],\n\t\t};\n\t}\n\t/*\n\tcomponentDidMount() {\n\t\tconst chatRef = firebase.database().ref('general');\n\t\tchatRef.on('value', (snapshot) => {\n\t\t\tconst getChats = snapshot.val();\n\t\t\tlet ascChats = [];\n\t\t\tfor (let chat in getChats) {\n\t\t\t\tif (getChats[chat].message !== '') {\n\t\t\t\t\tascChats.push({\n\t\t\t\t\t\tid: chat,\n\t\t\t\t\t\tmessage: getChats[chat].message,\n\t\t\t\t\t\tuser: getChats[chat].user,\n\t\t\t\t\t\tdate: getChats[chat].timestamp,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst chats = ascChats.reverse();\n\t\t\tthis.setState({ chats });\n\t\t});\n    }\n    */\n\trender() {\n\t\treturn (\n\t\t\t<div className='chatbox'>\n\t\t\t\t<ul className='chat-list'>\n\t\t\t\t\t{this.state.chats.map((chat) => {\n\t\t\t\t\t\tconst postDate = new Date(chat.date);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={chat.id}>\n\t\t\t\t\t\t\t\t<em>{postDate.getDate() + '/' + (postDate.getMonth() + 1)}</em>\n\t\t\t\t\t\t\t\t<strong>{chat.user}:</strong>\n\t\t\t\t\t\t\t\t{chat.message}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}