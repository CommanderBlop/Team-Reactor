{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase';\nimport AuthContext from './Firebase/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { Card, Badge, Row, Col } from 'react-bootstrap';\n\nfunction Friends() {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState();\n  const [friends, setFriends] = useState([]);\n  const [loading, setLoading] = useState(true);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (user) {\n      let friendList;\n      let friendsBuilder = [];\n      let count = 0;\n      firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n        friendList = doc.data().friends;\n      }).then(function () {\n        friendList.forEach((friend, index) => {\n          firebase.db.collection('user').doc(friend).get().then(function (doc) {\n            friendsBuilder.push(doc.data());\n            count++;\n\n            if (count === friendList.length) {\n              setLoading(false);\n            }\n          });\n        });\n        setFriends(friendsBuilder);\n      });\n    }\n  }, [user]);\n  let localDisplay = 'loading...';\n\n  if (!loading) {\n    // console.log(friends)\n    localDisplay = friends.map((friend, index) => {\n      let genreBuilder = friend.genres.map(genre => {\n        return /*#__PURE__*/React.createElement(Badge, {\n          className: \"mr-1\",\n          variant: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }\n        }, genre);\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }, friend.name), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, \"Genres: \", genreBuilder), friend.insta ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 45\n        }\n      }, \"Intagram: \", friend.insta) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 79\n        }\n      }, \"Insagram: N/A\"), friend.snap ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }\n      }, \"Snapchat: \", friend.snap) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 77\n        }\n      }, \"Snapchat: N/A\"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, localDisplay));\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Friends.js"],"names":["React","useContext","useState","useEffect","FirebaseContext","AuthContext","Link","useHistory","Formik","Form","Field","Card","Badge","Row","Col","Friends","firebase","user","setUser","friends","setFriends","loading","setLoading","auth","onAuthStateChanged","friendList","friendsBuilder","count","db","collection","doc","uid","get","then","data","forEach","friend","index","push","length","localDisplay","map","genreBuilder","genres","genre","name","insta","snap"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,iBAAtC;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAMC,QAAQ,GAAGf,UAAU,CAACG,eAAD,CAA3B;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,EAAhC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AAEAc,EAAAA,QAAQ,CAACO,IAAT,CAAcC,kBAAd,CAAiCP,IAAI,IAAI;AACrC,QAAIA,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GAND;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,IAAJ,EAAU;AACN,UAAIQ,UAAJ;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,KAAK,GAAG,CAAZ;AACAX,MAAAA,QAAQ,CAACY,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCb,IAAI,CAACc,GAAxC,EAA6CC,GAA7C,GAAmDC,IAAnD,CAAwD,UAAUH,GAAV,EAAe;AACnEL,QAAAA,UAAU,GAAGK,GAAG,CAACI,IAAJ,GAAWf,OAAxB;AACH,OAFD,EAEGc,IAFH,CAEQ,YAAY;AAChBR,QAAAA,UAAU,CAACU,OAAX,CAAmB,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClCrB,UAAAA,QAAQ,CAACY,EAAT,CAAYC,UAAZ,CAAuB,MAAvB,EAA+BC,GAA/B,CAAmCM,MAAnC,EAA2CJ,GAA3C,GAAiDC,IAAjD,CAAsD,UAAUH,GAAV,EAAe;AACjEJ,YAAAA,cAAc,CAACY,IAAf,CAAoBR,GAAG,CAACI,IAAJ,EAApB;AACAP,YAAAA,KAAK;;AACL,gBAAIA,KAAK,KAAKF,UAAU,CAACc,MAAzB,EAAiC;AAC7BjB,cAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,WAND;AAOH,SARD;AASAF,QAAAA,UAAU,CAACM,cAAD,CAAV;AACH,OAbD;AAcH;AACJ,GApBQ,EAoBN,CAACT,IAAD,CApBM,CAAT;AAsBA,MAAIuB,YAAY,GAAG,YAAnB;;AAEA,MAAI,CAACnB,OAAL,EAAc;AACV;AACAmB,IAAAA,YAAY,GAAGrB,OAAO,CAACsB,GAAR,CAAY,CAACL,MAAD,EAASC,KAAT,KAAmB;AAC1C,UAAIK,YAAY,GAAGN,MAAM,CAACO,MAAP,CAAcF,GAAd,CAAkBG,KAAK,IAAI;AAC1C,4BAAO,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAC,MAAjB;AAAwB,UAAA,OAAO,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6CA,KAA7C,CAAP;AACH,OAFkB,CAAnB;AAGA,0BACI,uDACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,MAAM,CAACS,IAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaH,YAAb,CAFJ,EAGKN,MAAM,CAACU,KAAP,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAcV,MAAM,CAACU,KAArB,CAAf,gBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHtD,EAIKV,MAAM,CAACW,IAAP,gBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAcX,MAAM,CAACW,IAArB,CAAd,gBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJpD,CADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH,KAjBc,CAAf;AAkBH;;AAGD,sBACI,uDACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,YAAJ,CALJ,CADJ;AASH;;AAED,eAAezB,OAAf","sourcesContent":["\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card, Badge, Row, Col } from 'react-bootstrap'\n\nfunction Friends() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [friends, setFriends] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user) {\n            let friendList\n            let friendsBuilder = []\n            let count = 0\n            firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n                friendList = doc.data().friends\n            }).then(function () {\n                friendList.forEach((friend, index) => {\n                    firebase.db.collection('user').doc(friend).get().then(function (doc) {\n                        friendsBuilder.push(doc.data())\n                        count++\n                        if (count === friendList.length) {\n                            setLoading(false)\n                        }\n                    })\n                })\n                setFriends(friendsBuilder)\n            })\n        }\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading) {\n        // console.log(friends)\n        localDisplay = friends.map((friend, index) => {\n            let genreBuilder = friend.genres.map(genre => {\n                return <Badge className=\"mr-1\" variant=\"secondary\">{genre}</Badge>\n            })\n            return (\n                <>\n                    <Card>\n                        <Card.Body>\n                            <h4>{friend.name}</h4>\n                            <h5>Genres: {genreBuilder}</h5>\n                            {friend.insta ? <p>Intagram: {friend.insta}</p> : <p>Insagram: N/A</p>}\n                            {friend.snap ? <p>Snapchat: {friend.snap}</p> : <p>Snapchat: N/A</p>}\n                        </Card.Body>\n                    </Card>\n                    <br />\n                </>\n            )\n        })\n    }\n\n\n    return (\n        <>\n        <Row>\n            <Col>\n            </Col>\n        </Row>\n            <p>{localDisplay}</p>\n        </>\n    )\n}\n\nexport default Friends"]},"metadata":{},"sourceType":"module"}