{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction MovieRec() {\n  //userGenreList = props.userGenreList\n  const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime'];\n  let userMovieList = ['tt4566758', 'tt6723592', 'tt8946378'];\n  let counter = 0; // const [finished, setFinished] = useState(false)\n\n  const [omdbData, setOmdbData] = useState('Loading');\n  const [triggerNext, setTriggerNext] = useState(0);\n  let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)];\n  let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=906b7c64\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setOmdbData(data);\n      setTriggerNext(triggerNext + 1);\n    });\n  }, [triggerNext]);\n  let title = omdbData === 'Loading' ? omdbData : omdbData.Title;\n  let genre = omdbData === 'Loading' ? '' : \"Genre: \" + omdbData.Genre;\n  let director = omdbData === 'Loading' ? '' : \"Director: \" + omdbData.Director;\n  let plot = omdbData === 'Loading' ? '' : \"Plot: \" + omdbData.Plot;\n\n  function buttonClick(counterChange) {\n    if (counterChange > 0 && counter + counterChange >= userMovieList.length) counter = 0;\n    if (counterChange < 0 && counter + counterChange < 0) counter = userMovieList.length - 1;\n    console.log(\"counter is now\" + counter);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buttonClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Left\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buttonClick(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Right\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, genre), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, director), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, plot)));\n}\n\nexport default MovieRec;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection.js"],"names":["React","useState","useEffect","MovieRec","userGenreList","userMovieList","counter","omdbData","setOmdbData","triggerNext","setTriggerNext","textToBeDisplayed","Math","round","random","length","url","toString","fetch","then","response","json","data","title","Title","genre","Genre","director","Director","plot","Plot","buttonClick","counterChange","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\n\n\nfunction MovieRec() {\n    //userGenreList = props.userGenreList\n    const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n    let userMovieList = ['tt4566758','tt6723592','tt8946378']\n    let counter = 0\n    // const [finished, setFinished] = useState(false)\n    const [omdbData, setOmdbData] = useState('Loading')\n    const [triggerNext, setTriggerNext] = useState(0)\n    let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n    let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=906b7c64\"\n    useEffect(() => {\n        fetch(url)\n            .then(response => \n                response.json())\n            \n            .then(data => {\n                setOmdbData(data)\n                setTriggerNext(triggerNext+1)\n            })\n    }, [triggerNext])\n    \n    \n    let title = omdbData === 'Loading' ? omdbData : omdbData.Title\n    let genre = omdbData === 'Loading'? '' : \"Genre: \" + omdbData.Genre\n    let director = omdbData === 'Loading'? '' : \"Director: \" + omdbData.Director\n    let plot = omdbData === 'Loading' ? '' : \"Plot: \" + omdbData.Plot\n\n    function buttonClick(counterChange) {\n        if(counterChange > 0 && counter + counterChange >= userMovieList.length) counter = 0\n        if(counterChange < 0 && counter + counterChange < 0) counter = userMovieList.length - 1\n        console.log(\"counter is now\" + counter)\n    }\n    \n    return (\n        <div>\n            <button>Back</button>\n            <button onClick = {buttonClick(1)}>Left</button>\n            <button onClick = {buttonClick(-1)}>Right</button>\n            <div>\n                <h1>{title}</h1>\n                <h3>{genre}</h3>\n                <h3>{director}</h3>\n                <p>{plot}</p>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default MovieRec"]},"metadata":{},"sourceType":"module"}