{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/Firebase/AuthContext.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport FirebaseContext from \"./index\"; //typescript stuff (use as doccumentaiton)\n// type ContextProps = {\n//     user: firebase.User | null;\n//     isAuthenticated: boolean;\n//     setUser: any;\n//     isLoadingAuthState: boolean;\n// };\n\nconst AuthContext = React.createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const firebase = useContext(FirebaseContext);\n  const [user, setUser] = useState(null);\n  const [updateCounter, setUpdateCounter] = useState(0);\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\n  const [isAdmin, setAdmin] = useState(null);\n  const [isCompany, setCompany] = useState(null);\n  const [isVerified, setVerified] = useState(null);\n\n  const forceUserUpdate = newUser => {\n    setLoadingAuthState(true);\n    setUser(newUser);\n    setUpdateCounter(updateCounter + 1);\n  };\n\n  const updateAdminState = async pUser => {\n    const idTok = await pUser.getIdTokenResult(); //Relying on this part to end after onAuthStateChanged\n    // console.log(\"upading isAdmin\",!!idTok.claims.admin)\n    // console.log(\"upading isCompany\",!!idTok.claims.company)\n\n    setAdmin(!!idTok.claims.admin);\n    setCompany(!!idTok.claims.company);\n    setLoadingAuthState(false);\n  };\n\n  useEffect(() => {\n    //Run only on mount\n    firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n        setVerified(user.emailVerified);\n        updateAdminState(user);\n      } else {\n        setUser(null);\n        setAdmin(false);\n        setCompany(false);\n        setVerified(false);\n        setLoadingAuthState(false);\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updateCounter]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      isAuthenticated: user !== null && typeof user !== 'undefined',\n      setUser: setUser,\n      isLoadingAuthState: loadingAuthState,\n      isAdmin: isAdmin,\n      isCompany: isCompany,\n      isVerified: isVerified,\n      forceUserUpdate: forceUserUpdate\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default AuthContext;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/Firebase/AuthContext.js"],"names":["React","useEffect","useState","useContext","FirebaseContext","AuthContext","createContext","AuthProvider","children","firebase","user","setUser","updateCounter","setUpdateCounter","loadingAuthState","setLoadingAuthState","isAdmin","setAdmin","isCompany","setCompany","isVerified","setVerified","forceUserUpdate","newUser","updateAdminState","pUser","idTok","getIdTokenResult","claims","admin","company","auth","onAuthStateChanged","emailVerified","isAuthenticated","isLoadingAuthState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,eAAP,MAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,CAAoB,EAApB,CAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAMC,QAAQ,GAAGN,UAAU,CAACC,eAAD,CAA3B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACc,OAAD,EAAUC,QAAV,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACgB,SAAD,EAAYC,UAAZ,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,WAAb,IAA4BnB,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMoB,eAAe,GAAIC,OAAD,IAAa;AACnCR,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAJ,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAV,IAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AACD,GAJD;;AAMA,QAAMY,gBAAgB,GAAG,MAAMC,KAAN,IAAgB;AACvC,UAAMC,KAAK,GAAG,MAAMD,KAAK,CAACE,gBAAN,EAApB,CADuC,CAEvC;AACA;AACA;;AACAV,IAAAA,QAAQ,CAAC,CAAC,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAhB,CAAR;AACAV,IAAAA,UAAU,CAAC,CAAC,CAACO,KAAK,CAACE,MAAN,CAAaE,OAAhB,CAAV;AACAf,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GARD;;AAUAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,QAAQ,CAACsB,IAAT,CAAcC,kBAAd,CAAkCtB,IAAD,IAAU;AACzC,UAAGA,IAAH,EAAQ;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAW,QAAAA,WAAW,CAACX,IAAI,CAACuB,aAAN,CAAX;AACAT,QAAAA,gBAAgB,CAACd,IAAD,CAAhB;AACD,OAJD,MAIK;AACHC,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAM,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAN,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;AAEF,KAbD,EAFc,CAgBd;AACD,GAjBQ,EAiBN,CAACH,aAAD,CAjBM,CAAT;AAmBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAEA,IADD;AAELwB,MAAAA,eAAe,EAAExB,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,WAF7C;AAGLC,MAAAA,OAAO,EAAEA,OAHJ;AAILwB,MAAAA,kBAAkB,EAAErB,gBAJf;AAKLE,MAAAA,OAAO,EAAEA,OALJ;AAMLE,MAAAA,SAAS,EAAEA,SANN;AAOLE,MAAAA,UAAU,EAAEA,UAPP;AAQLE,MAAAA,eAAe,EAAEA;AARZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGd,QAbH,CADF;AAiBD,CA7DM;AA+DP,eAAeH,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport FirebaseContext from \"./index\";\n\n//typescript stuff (use as doccumentaiton)\n// type ContextProps = {\n//     user: firebase.User | null;\n//     isAuthenticated: boolean;\n//     setUser: any;\n//     isLoadingAuthState: boolean;\n// };\n\nconst AuthContext = React.createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const firebase = useContext(FirebaseContext)\n  const [user, setUser] = useState(null);\n  const [updateCounter, setUpdateCounter] = useState(0);\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\n  const [isAdmin, setAdmin] = useState(null)\n  const [isCompany, setCompany] = useState(null)\n  const [isVerified, setVerified] = useState(null)\n\n  const forceUserUpdate = (newUser) => {\n    setLoadingAuthState(true);\n    setUser(newUser);\n    setUpdateCounter(updateCounter+1);\n  }\n\n  const updateAdminState = async(pUser) => {\n    const idTok = await pUser.getIdTokenResult()\n    //Relying on this part to end after onAuthStateChanged\n    // console.log(\"upading isAdmin\",!!idTok.claims.admin)\n    // console.log(\"upading isCompany\",!!idTok.claims.company)\n    setAdmin(!!idTok.claims.admin)\n    setCompany(!!idTok.claims.company)\n    setLoadingAuthState(false);\n  }\n\n  useEffect(() => {\n    //Run only on mount\n    firebase.auth.onAuthStateChanged((user) => {\n      if(user){\n        setUser(user);\n        setVerified(user.emailVerified)\n        updateAdminState(user);\n      }else{\n        setUser(null)\n        setAdmin(false)\n        setCompany(false)\n        setVerified(false)\n        setLoadingAuthState(false)\n      }\n\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updateCounter]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        isAuthenticated: user !== null && typeof user !== 'undefined',\n        setUser: setUser,\n        isLoadingAuthState: loadingAuthState,\n        isAdmin: isAdmin,\n        isCompany: isCompany,\n        isVerified: isVerified,\n        forceUserUpdate: forceUserUpdate,\n      }}\n    >\n\n      {children}\n   </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext\n"]},"metadata":{},"sourceType":"module"}