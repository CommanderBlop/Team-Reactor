{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase';\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\"; // props: database idto search for\n\nconst id = \"test-main\";\n\nfunction Home(props) {\n  const firebase = useContext(FirebaseContext);\n  db.collection(\"community-discussion-board\").doc(id).set({\n    comments: ['latest1']\n  }).then(function () {\n    console.log(\"Document successfully written!\");\n  }).catch(function (error) {\n    console.error(\"Error writing document: \", error);\n  });\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"content of the community post\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), notes.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Note","CreateArea","id","Home","props","firebase","db","collection","doc","set","comments","then","console","log","catch","error","addNote","newNote","setNotes","prevNotes","deleteNote","filter","noteItem","index","notes","map","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAKA;;AACA,MAAMC,EAAE,GAAG,WAAX;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,QAAQ,GAAGR,UAAU,CAACE,eAAD,CAA3B;AAEAO,EAAAA,EAAE,CAACC,UAAH,CAAc,4BAAd,EAA4CC,GAA5C,CAAgDN,EAAhD,EAAoDO,GAApD,CAAwD;AACpDC,IAAAA,QAAQ,EAAE,CAAC,SAAD;AAD0C,GAAxD,EAGCC,IAHD,CAGM,YAAW;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,GALD,EAMCC,KAND,CAMO,UAASC,KAAT,EAAgB;AACnBH,IAAAA,OAAO,CAACG,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH,GARD;;AAWA,WAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxBC,IAAAA,QAAQ,CAACC,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAeF,OAAf,CAAP;AACD,KAFO,CAAR;AAGD;;AAED,WAASG,UAAT,CAAoBlB,EAApB,EAAwB;AACtBgB,IAAAA,QAAQ,CAACC,SAAS,IAAI;AACpB,aAAOA,SAAS,CAACE,MAAV,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,eAAOA,KAAK,KAAKrB,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAIE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEc,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGQ,KAAK,CAACC,GAAN,CAAU,CAACH,QAAD,EAAWC,KAAX,KAAqB;AAC9B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,KAAK,EAAED,QAAQ,CAACI,KAHlB;AAIE,MAAA,OAAO,EAAEJ,QAAQ,CAACK,OAJpB;AAKE,MAAA,QAAQ,EAAEP,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CALH,CADF;AAmBD;;AAED,eAAejB,IAAf","sourcesContent":["import React, { useState, useContext, useEffect} from \"react\";\nimport FirebaseContext from '../Firebase';\n\n\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\n\n\n// props: database idto search for\nconst id = \"test-main\";\n\nfunction Home(props) {\n  const firebase = useContext(FirebaseContext);\n\n  db.collection(\"community-discussion-board\").doc(id).set({\n      comments: ['latest1']\n  })\n  .then(function() {\n      console.log(\"Document successfully written!\");\n  })\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  });\n\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <h1>Movie Title</h1>\n      <p>content of the community post</p>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}