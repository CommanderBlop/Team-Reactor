{"ast":null,"code":"var _jsxFileName = \"/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/Chatbox.js\";\nimport React, { useContext } from 'react';\nimport FirebaseContext from '../Firebase';\n\nclass Chatbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatID: 'T5O5rvqkXjOTTNzgClyK',\n      chats: []\n    };\n    this.getData = this.getData.bind(this);\n  }\n\n  getData() {\n    const firebase = useFirestore(FirebaseContext);\n    var docRef = firebase.collection('messages').doc(this.state.chatID);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        return doc.data();\n      } else {\n        // doc.data() will be undefined in this case\n        console.log('No such document!');\n      }\n    }).catch(function (error) {\n      console.log('Error getting document:', error);\n    });\n  }\n\n  componentDidMount() {\n    let data = this.getData();\n  }\n  /*\n  \tchatRef.on('value', (snapshot) => {\n  \t\tconst getChats = snapshot.val();\n  \t\tlet ascChats = [];\n  \t\tfor (let chat in getChats) {\n  \t\t\tif (getChats[chat].message !== '') {\n  \t\t\t\tascChats.push({\n  \t\t\t\t\tid: chat,\n  \t\t\t\t\tmessage: getChats[chat].message,\n  \t\t\t\t\tuser: getChats[chat].user,\n  \t\t\t\t\tdate: getChats[chat].timestamp,\n  \t\t\t\t});\n  \t\t\t}\n  \t\t}\n  \t\tconst chats = ascChats.reverse();\n  \t\tthis.setState({ chats });\n  \t});*/\n\n  /*\n  render() {\n  \treturn (\n  \t\t<div className='chatbox'>\n  \t\t\t<ul className='chat-list'>\n  \t\t\t\t{this.state.chats.map((chat) => {\n  \t\t\t\t\tconst postDate = new Date(chat.date);\n  \t\t\t\t\treturn (\n  \t\t\t\t\t\t<li key={chat.id}>\n  \t\t\t\t\t\t\t<em>{postDate.getDate() + '/' + (postDate.getMonth() + 1)}</em>\n  \t\t\t\t\t\t\t<strong>{chat.user}:</strong>\n  \t\t\t\t\t\t\t{chat.message}\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t);\n  \t\t\t\t})}\n  \t\t\t</ul>\n  \t\t</div>\n  \t);\n     }\n     */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, \"hi\");\n  }\n\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["/Volumes/Olina Wu/React projects/Team-Reactor/src/Chat/Chatbox.js"],"names":["React","useContext","FirebaseContext","Chatbox","Component","constructor","props","state","chatID","chats","getData","bind","firebase","useFirestore","docRef","collection","doc","get","then","exists","data","console","log","catch","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE,sBADI;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAb;AAKA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA;;AACDD,EAAAA,OAAO,GAAG;AACT,UAAME,QAAQ,GAAGC,YAAY,CAACX,eAAD,CAA7B;AACA,QAAIY,MAAM,GAAGF,QAAQ,CAACG,UAAT,CAAoB,UAApB,EAAgCC,GAAhC,CAAoC,KAAKT,KAAL,CAAWC,MAA/C,CAAb;AACAM,IAAAA,MAAM,CACJG,GADF,GAEEC,IAFF,CAEO,UAAUF,GAAV,EAAe;AACpB,UAAIA,GAAG,CAACG,MAAR,EAAgB;AACf,eAAOH,GAAG,CAACI,IAAJ,EAAP;AACA,OAFD,MAEO;AACN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AACD,KATF,EAUEC,KAVF,CAUQ,UAAUC,KAAV,EAAiB;AACvBH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCE,KAAvC;AACA,KAZF;AAaA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,QAAIL,IAAI,GAAG,KAAKV,OAAL,EAAX;AACA;AAED;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;AAoBAgB,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAxEoC;;AA0EtC,eAAevB,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport FirebaseContext from '../Firebase';\n\nclass Chatbox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tchatID: 'T5O5rvqkXjOTTNzgClyK',\n\t\t\tchats: [],\n\t\t};\n\n\t\tthis.getData = this.getData.bind(this);\n\t}\n\tgetData() {\n\t\tconst firebase = useFirestore(FirebaseContext);\n\t\tvar docRef = firebase.collection('messages').doc(this.state.chatID);\n\t\tdocRef\n\t\t\t.get()\n\t\t\t.then(function (doc) {\n\t\t\t\tif (doc.exists) {\n\t\t\t\t\treturn doc.data();\n\t\t\t\t} else {\n\t\t\t\t\t// doc.data() will be undefined in this case\n\t\t\t\t\tconsole.log('No such document!');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log('Error getting document:', error);\n\t\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tlet data = this.getData();\n\t}\n\n\t/*\n\t\tchatRef.on('value', (snapshot) => {\n\t\t\tconst getChats = snapshot.val();\n\t\t\tlet ascChats = [];\n\t\t\tfor (let chat in getChats) {\n\t\t\t\tif (getChats[chat].message !== '') {\n\t\t\t\t\tascChats.push({\n\t\t\t\t\t\tid: chat,\n\t\t\t\t\t\tmessage: getChats[chat].message,\n\t\t\t\t\t\tuser: getChats[chat].user,\n\t\t\t\t\t\tdate: getChats[chat].timestamp,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst chats = ascChats.reverse();\n\t\t\tthis.setState({ chats });\n\t\t});*/\n\t/*\n\trender() {\n\t\treturn (\n\t\t\t<div className='chatbox'>\n\t\t\t\t<ul className='chat-list'>\n\t\t\t\t\t{this.state.chats.map((chat) => {\n\t\t\t\t\t\tconst postDate = new Date(chat.date);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={chat.id}>\n\t\t\t\t\t\t\t\t<em>{postDate.getDate() + '/' + (postDate.getMonth() + 1)}</em>\n\t\t\t\t\t\t\t\t<strong>{chat.user}:</strong>\n\t\t\t\t\t\t\t\t{chat.message}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n    }\n    */\n\trender() {\n\t\treturn <h1>hi</h1>;\n\t}\n}\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}