{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/MovieCollection.js\";\nimport React, { useState, useEffect } from 'react';\n\nfunction MovieCollection() {\n  //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n  const API_KEY = \"7d667341\"; //get user movie collection and put it here\n\n  let userMovieList = ['tt4566758', 'tt6723592', 'tt8946378'];\n  const [counter, setCounter] = useState(0);\n  const [omdbData, setOmdbData] = useState('Loading');\n  const [triggerNext, setTriggerNext] = useState(0); //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n\n  let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY; //fetch data\n\n  useEffect(() => {\n    function doFetch() {\n      fetch(url).then(response => response.json()).then(data => {\n        setOmdbData(data);\n      });\n    }\n\n    doFetch();\n  }, [triggerNext]); //extract needed info\n\n  let title = omdbData === 'Loading' ? omdbData : omdbData.Title;\n  let genre = omdbData === 'Loading' ? '' : \"Genre: \" + omdbData.Genre;\n  let director = omdbData === 'Loading' ? '' : \"Director: \" + omdbData.Director;\n  let plot = omdbData === 'Loading' ? '' : omdbData.Plot; //button right/left click handler\n\n  function buttonClick(counterChange) {\n    if (counterChange > 0 && counter + counterChange >= userMovieList.length) {\n      setCounter(0);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading');\n      return;\n    }\n\n    if (counterChange < 0 && counter + counterChange < 0) {\n      setCounter(userMovieList.length - 1);\n      setTriggerNext(triggerNext + 1);\n      setOmdbData('Loading');\n      return;\n    }\n\n    setCounter(counter + counterChange);\n    setTriggerNext(triggerNext + 1);\n    setOmdbData('Loading');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => buttonClick(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, '<'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => buttonClick(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, '>'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, genre), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, director), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, plot)));\n}\n\nexport default MovieCollection;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/MovieCollection.js"],"names":["React","useState","useEffect","MovieCollection","API_KEY","userMovieList","counter","setCounter","omdbData","setOmdbData","triggerNext","setTriggerNext","url","toString","doFetch","fetch","then","response","json","data","title","Title","genre","Genre","director","Director","plot","Plot","buttonClick","counterChange","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\n\n\nfunction MovieCollection() {\n    //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n\n    const API_KEY = \"7d667341\"\n    //get user movie collection and put it here\n    let userMovieList = ['tt4566758','tt6723592','tt8946378']\n    const [counter, setCounter] = useState(0)\n    const [omdbData, setOmdbData] = useState('Loading')\n    const [triggerNext, setTriggerNext] = useState(0)\n    //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n    let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY\n\n    //fetch data\n    useEffect(() => {\n        function doFetch(){\n            fetch(url)\n            .then(response => \n                response.json())\n            \n            .then(data => {\n                setOmdbData(data)\n            })\n        }\n        doFetch()\n    }, [triggerNext])\n    \n    //extract needed info\n    let title = omdbData === 'Loading' ? omdbData : omdbData.Title\n    let genre = omdbData === 'Loading'? '' : \"Genre: \" + omdbData.Genre\n    let director = omdbData === 'Loading'? '' : \"Director: \" + omdbData.Director\n    let plot = omdbData === 'Loading' ? '' : omdbData.Plot\n\n    //button right/left click handler\n    function buttonClick(counterChange) {\n        if(counterChange > 0 && counter + counterChange >= userMovieList.length) {\n            setCounter(0);\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading')\n            return \n        }\n        if(counterChange < 0 && counter + counterChange < 0) {\n            setCounter(userMovieList.length - 1)\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading')\n            return \n        }\n        setCounter(counter + counterChange)\n        setTriggerNext(triggerNext+1)\n        setOmdbData('Loading')\n    }\n    \n    return (\n        <div>\n            <button>Back</button>\n            <button onClick = {() =>buttonClick(-1)}>{'<'}</button>\n            <button onClick = {() => buttonClick(1)}>{'>'}</button>\n            <div>\n                <h1>{title}</h1>\n                <h3>{genre}</h3>\n                <h3>{director}</h3>\n                <p>{plot}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCollection"]},"metadata":{},"sourceType":"module"}