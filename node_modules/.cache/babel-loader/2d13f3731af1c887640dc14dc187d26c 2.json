{"ast":null,"code":"var _jsxFileName = \"/Users/Ethan/Documents/GitHub/Team-Reactor/src/DailyRec.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from './Firebase';\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nconst API_KEY = \"7d667341\";\n\nfunction DailyRec(props) {\n  let [movieData, setMovieData] = useState({});\n  const [user, setUser] = useState();\n  const [genreList, setGenreList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [display, setDisplay] = useState('');\n  const firebase = useContext(FirebaseContext);\n  firebase.auth.onAuthStateChanged(user => {\n    if (user) {\n      setUser(user);\n    } else {\n      setUser(null);\n    }\n  });\n  useEffect(() => {\n    if (user) {\n      firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n        setGenreList(doc.data().genres);\n        setLoading(false);\n      });\n    }\n  }, [user]);\n\n  function arrayMatch(arr1, arr2) {\n    let returnVal = false;\n    arr1.forEach(element => {\n      if (arr2.includes(element)) {\n        returnVal = true;\n        return;\n      }\n    });\n    return returnVal;\n  }\n\n  async function matching() {\n    console.log(\"enter while loop\");\n\n    while (true) {\n      let randMovieID = '';\n      let i = 0;\n\n      for (i = 0; i < 7; i++) {\n        randMovieID += Math.round(Math.random() * 10).toString();\n      }\n\n      let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY;\n      let response = await fetch(url);\n      let data = await response.json();\n      console.log(data);\n      setDisplay(JSON.stringify(data, 2));\n\n      if (data.Response === \"False\") {\n        continue;\n      }\n\n      let filmGenres = data.Genre.split(', ');\n      console.log('fg', filmGenres);\n\n      if (arrayMatch(filmGenres, genreList) && data.Type !== 'episode') {\n        setMovieData(data);\n        setDisplay('FOUND!');\n        break;\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: '#e4e3e3',\n      height: \"40em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"#204051\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Get a movie recommendation based on your preferred genres - \"), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '25rem'\n    },\n    className: \"center-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: movieData.Poster,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, movieData.Title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Length: \" + movieData.Length)), /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Director: \" + movieData.Director), /*#__PURE__*/React.createElement(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Plot: \" + movieData.Plot))), /*#__PURE__*/React.createElement(Button, {\n    onClick: matching,\n    disabled: loading,\n    variant: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Feeling lucky!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 97\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, display), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Note: It might take a while to load\"));\n}\n\nexport default DailyRec;","map":{"version":3,"sources":["/Users/Ethan/Documents/GitHub/Team-Reactor/src/DailyRec.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","Card","ListGroup","ListGroupItem","Button","API_KEY","DailyRec","props","movieData","setMovieData","user","setUser","genreList","setGenreList","loading","setLoading","display","setDisplay","firebase","auth","onAuthStateChanged","db","collection","doc","uid","get","then","data","genres","arrayMatch","arr1","arr2","returnVal","forEach","element","includes","matching","console","log","randMovieID","i","Math","round","random","toString","url","response","fetch","json","JSON","stringify","Response","filmGenres","Genre","split","Type","background","height","color","width","Poster","Title","Length","Director","Plot"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from './Firebase'\nimport { Card,ListGroup,ListGroupItem, Button } from 'react-bootstrap'\n\nconst API_KEY = \"7d667341\"\n\nfunction DailyRec(props) {\n    let [movieData, setMovieData] = useState({})\n    const [user, setUser] = useState()\n    const [genreList, setGenreList] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [display, setDisplay] = useState('')\n    const firebase = useContext(FirebaseContext)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user){\n            firebase.db.collection('user').doc(user.uid).get().then(function(doc){\n                setGenreList(doc.data().genres)\n                setLoading(false)\n            })\n        }\n    }, [user])\n   \n    function arrayMatch(arr1, arr2){\n        let returnVal = false\n        arr1.forEach(element => {\n            if (arr2.includes(element)){\n                returnVal = true\n                return\n            }\n        })\n        return returnVal\n    }\n\n    async function matching() {\n        console.log(\"enter while loop\")\n        while(true) {\n            let randMovieID = ''\n            let i = 0\n            for(i = 0; i < 7; i++) {\n                randMovieID += Math.round(Math.random() * 10).toString()\n            }\n            let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY\n            let response = await fetch(url)\n            let data = await response.json()\n            console.log(data)\n            setDisplay(JSON.stringify(data, 2))\n            if (data.Response === \"False\"){\n                continue\n            }\n            let filmGenres = data.Genre.split(', ')\n            \n            console.log('fg', filmGenres)\n            if(arrayMatch(filmGenres, genreList) && data.Type !== 'episode') {\n                setMovieData(data)\n                setDisplay('FOUND!')\n                break\n            }\n            \n        }\n    }\n\n    return (\n        <div style={{background:'#e4e3e3', height: \"40em\"}}>\n          {/* <h1>{movieData == undefined ? \"Loading today's recommendation\" : ''}</h1> */}\n          <h2 style={{color:\"#204051\"}}>Get a movie recommendation based on your preferred genres - </h2>\n          <Card style={{ width: '25rem' }}  className=\"center-item\">\n\n            <Card.Img variant=\"top\" src={movieData.Poster} />\n\n            <Card.Body>\n                  <Card.Title>{movieData.Title}</Card.Title>\n                  <Card.Text>\n                    {\"Length: \" + movieData.Length}\n                  </Card.Text>\n            </Card.Body>\n            \n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>{\"Director: \" +movieData.Director}</ListGroupItem>\n              <ListGroupItem>{\"Plot: \" +movieData.Plot}</ListGroupItem>\n            </ListGroup>\n          </Card>\n\n            <Button onClick={matching} disabled={loading} variant=\"info\">Feeling lucky!</Button><br/>\n            <label disabled>{display}</label><br/>\n            <label>Note: It might take a while to load</label>\n        </div>\n    )\n}\n\nexport default DailyRec\n"]},"metadata":{},"sourceType":"module"}