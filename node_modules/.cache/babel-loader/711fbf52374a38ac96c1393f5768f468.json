{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase';\nimport './discussion-group.css';\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\"; // props: database idto search for\n\nfunction Home(props) {\n  const id = props.id;\n  const firebase = useContext(FirebaseContext);\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    firebase.db.collection(\"community-discussion-board\").doc(id).set({\n      comments: [...notes, newNote]\n    }).then(function () {\n      setNotes(prevNotes => {\n        return [...prevNotes, newNote];\n      });\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n\n  useEffect(() => {\n    // if database already exist\n    firebase.db.collection(\"community-discussion-board\").doc(id).get().then(function (doc) {\n      if (doc.exists) {\n        const {\n          comments\n        } = doc.data();\n        console.log(\"Document data:\", comments);\n        setNotes(comments);\n      } else {\n        // else it doesn't exist, create one\n        // doc.data() will be undefined in this case\n        firebase.db.collection(\"community-discussion-board\").doc(id).set({\n          comments: []\n        }).then(function () {\n          console.log(\"created new document for discussion\");\n        }).catch(function (error) {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }, []);\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dis-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"content of the community post\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), notes.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Note","CreateArea","Home","props","id","firebase","notes","setNotes","addNote","newNote","db","collection","doc","set","comments","then","prevNotes","catch","error","console","get","exists","data","log","deleteNote","filter","noteItem","index","map","title","content"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect} from \"react\";\nimport FirebaseContext from '../Firebase';\n\nimport './discussion-group.css';\n\n\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\n\n\n// props: database idto search for\nfunction Home(props) {\n  const id = props.id;\n\n\n  const firebase = useContext(FirebaseContext);\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    firebase.db.collection(\"community-discussion-board\").doc(id).set({\n        comments: [...notes, newNote]\n    })\n    .then(function() {\n      setNotes(prevNotes => {\n        return [...prevNotes, newNote];\n      });\n    })\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    });\n  }\n\n  useEffect(() => {\n\n\n\n    // if database already exist\n    firebase.db.collection(\"community-discussion-board\").doc(id).get().then(function(doc) {\n    if (doc.exists) {\n        const {comments} = doc.data();\n        console.log(\"Document data:\", comments);\n        setNotes(comments);\n    } else { // else it doesn't exist, create one\n        // doc.data() will be undefined in this case\n        firebase.db.collection(\"community-discussion-board\").doc(id).set({\n            comments: []\n        })\n        .then(function() {\n            console.log(\"created new document for discussion\");\n          })\n\n        .catch(function(error) {\n            console.error(\"Error writing document: \", error);\n        });\n\n\n    }\n}).catch(function(error) {\n    console.log(\"Error getting document:\", error);\n});\n  },[]);\n\n\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"dis-div\">\n      <h1>Movie Title</h1>\n      <p>content of the community post</p>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}