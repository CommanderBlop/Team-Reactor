{"ast":null,"code":"var _jsxFileName = \"/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport FirebaseContext from '../Firebase';\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nconst id = \"test-main\"; // props: database idto search for\n\nfunction Home(props) {\n  const firebase = useContext(FirebaseContext);\n  firebase.db.collection(\"community-discussion-board\").doc(id).set({\n    comments: [\"com1\", \"com2\", \"com3\"]\n  }).then(() => {\n    console.log();\n  }).catch(err => console.log(err));\n  var docRef = firebase.db.collection(\"community-discussion-board\").doc(id);\n  docRef.get().then(function (doc) {\n    if (doc.exists) {\n      console.log(\"Document data:\", doc.data());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }).catch(function (error) {\n    console.log(\"Error getting document:\", error);\n  });\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"content of the community post\"), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), notes.map((noteItem, index) => {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: index,\n      id: index,\n      title: noteItem.title,\n      content: noteItem.content,\n      onDelete: deleteNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/kis/Documents/GitHub/Team-Reactor/src/community-posts/home.jsx"],"names":["React","useState","useContext","FirebaseContext","Note","CreateArea","id","Home","props","firebase","db","collection","doc","set","comments","then","console","log","catch","err","docRef","get","exists","data","error","notes","setNotes","addNote","newNote","prevNotes","deleteNote","filter","noteItem","index","map","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAIA,MAAMC,EAAE,GAAG,WAAX,C,CACA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,QAAQ,GAAGP,UAAU,CAACC,eAAD,CAA3B;AAEAM,EAAAA,QAAQ,CAACC,EAAT,CAAYC,UAAZ,CAAuB,4BAAvB,EAAqDC,GAArD,CAAyDN,EAAzD,EAA6DO,GAA7D,CAAiE;AAC/DC,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,EAAgB,MAAhB;AADqD,GAAjE,EAEGC,IAFH,CAEQ,MAAI;AACVC,IAAAA,OAAO,CAACC,GAAR;AACD,GAJD,EAIGC,KAJH,CAISC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAJhB;AAMA,MAAIC,MAAM,GAAGX,QAAQ,CAACC,EAAT,CAAYC,UAAZ,CAAuB,4BAAvB,EAAqDC,GAArD,CAAyDN,EAAzD,CAAb;AAEFc,EAAAA,MAAM,CAACC,GAAP,GAAaN,IAAb,CAAkB,UAASH,GAAT,EAAc;AAC5B,QAAIA,GAAG,CAACU,MAAR,EAAgB;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,GAAG,CAACW,IAAJ,EAA9B;AACH,KAFD,MAEO;AACH;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GAPD,EAOGC,KAPH,CAOS,UAASM,KAAT,EAAgB;AACrBR,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,KAAvC;AACH,GATD;AAkBE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;;AAIA,WAAS0B,OAAT,CAAiBC,OAAjB,EAA0B;AACxBF,IAAAA,QAAQ,CAACG,SAAS,IAAI;AACpB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACD,KAFO,CAAR;AAGD;;AAED,WAASE,UAAT,CAAoBxB,EAApB,EAAwB;AACtBoB,IAAAA,QAAQ,CAACG,SAAS,IAAI;AACpB,aAAOA,SAAS,CAACE,MAAV,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,eAAOA,KAAK,KAAK3B,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAIE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEqB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGF,KAAK,CAACS,GAAN,CAAU,CAACF,QAAD,EAAWC,KAAX,KAAqB;AAC9B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,KAAK,EAAED,QAAQ,CAACG,KAHlB;AAIE,MAAA,OAAO,EAAEH,QAAQ,CAACI,OAJpB;AAKE,MAAA,QAAQ,EAAEN,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVA,CALH,CADF;AAmBD;;AAED,eAAevB,IAAf","sourcesContent":["import React, { useState, useContext} from \"react\";\nimport FirebaseContext from '../Firebase';\n\n\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\n\nconst id = \"test-main\";\n// props: database idto search for\nfunction Home(props) {\n  const firebase = useContext(FirebaseContext);\n\n  firebase.db.collection(\"community-discussion-board\").doc(id).set({\n    comments: [\"com1\", \"com2\",\"com3\"]\n  }).then(()=>{\n    console.log();\n  }).catch(err => console.log(err));\n\n  var docRef = firebase.db.collection(\"community-discussion-board\").doc(id);\n\ndocRef.get().then(function(doc) {\n    if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n    } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n    }\n}).catch(function(error) {\n    console.log(\"Error getting document:\", error);\n});\n\n\n\n\n\n\n\n\n  const [notes, setNotes] = useState([]);\n\n\n\n  function addNote(newNote) {\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <h1>Movie Title</h1>\n      <p>content of the community post</p>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}