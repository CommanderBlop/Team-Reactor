{"ast":null,"code":"var _jsxFileName = \"/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport FirebaseContext from '../Firebase';\nconst API_KEY = \"7d667341\"; // function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response => \n//                 response.json())\n//             .then(data => {\n//                 return data\n//             })\n// }\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n  const history = useHistory();\n  const [dataSet, setDataSet] = useState({\n    movieName: '',\n    upload: false,\n    title: '',\n    genre: '',\n    year: '',\n    director: '',\n    length: '',\n    plot: '',\n    resultID: '',\n    img: '',\n    data: '',\n    response: false\n  });\n\n  function nameInput(event) {\n    setDataSet({\n      movieName: event.target.value.trim()\n    });\n  }\n\n  function handleSearch() {\n    console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY);\n    fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY).then(response => response.json()).then(data => {\n      setDataSet({\n        response: data.Response === \"False\" ? false : true,\n        title: data.Title,\n        year: data.Year,\n        length: data.Runtime,\n        director: data.Director,\n        genre: data.Genre,\n        plot: data.Plot,\n        resultID: data.imdbID,\n        img: data.Poster\n      });\n      console.log(\"finished search\");\n    });\n    console.log(\"result:\" + dataSet.searchResult);\n  }\n\n  const firebase = useContext(FirebaseContext);\n  const [runSubmit, setRunSubmit] = useState(0);\n\n  function submit() {\n    if (dataSet != null && dataSet.response) {\n      var movieListFire = firebase.db.collection(\"movieTester\").doc(\"testUser\");\n      movieListFire.update({\n        movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n      });\n      console.log(\"successfully added to your list!\");\n    }\n  }\n\n  useEffect(() => {\n    submit();\n  }, [runSubmit]);\n\n  function enterPressed(event) {\n    var code = event.keyCode || event.which;\n\n    if (code === 13) {\n      //13 is the enter keycode\n      handleSearch();\n      setRunSubmit(runSubmit + 1);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Add another movie\",\n    onChange: nameInput,\n    style: {\n      width: 500,\n      height: 100,\n      fontSize: 50\n    },\n    onKeyUp: enterPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 163\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      history.push('/MovieCollection');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Back to collection\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Add to your collection!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: ({\n      visibility: dataSet.response ? \"visible\" : \"hidden\"\n    }, {\n      textAlign: 'left'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: dataSet.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, dataSet.response && dataSet.title), dataSet.response && \"Year: \" + dataSet.year, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 62\n    }\n  }), dataSet.response && \"Length: \" + dataSet.length, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 66\n    }\n  }), dataSet.response && \"Director: \" + dataSet.director, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 70\n    }\n  }), dataSet.response && \"Genre: \" + dataSet.genre, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 64\n    }\n  }), dataSet.response && dataSet.plot, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 51\n    }\n  })));\n}\n\nexport default MovieFinder;","map":{"version":3,"sources":["/Users/commanderblop/Documents/GitHub/Team-Reactor/src/MovieCollection/addMovie.js"],"names":["React","useContext","useState","useEffect","useHistory","Link","FirebaseContext","API_KEY","MovieFinder","history","dataSet","setDataSet","movieName","upload","title","genre","year","director","length","plot","resultID","img","data","response","nameInput","event","target","value","trim","handleSearch","console","log","fetch","then","json","Response","Title","Year","Runtime","Director","Genre","Plot","imdbID","Poster","searchResult","firebase","runSubmit","setRunSubmit","submit","movieListFire","db","collection","doc","update","movieID","fb","firestore","FieldValue","arrayUnion","enterPressed","code","keyCode","which","width","height","fontSize","push","visibility","textAlign"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\nimport {useHistory, Link} from 'react-router-dom'\nimport FirebaseContext from '../Firebase'\nconst API_KEY = \"7d667341\"\n\n// function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response => \n//                 response.json())\n            \n//             .then(data => {\n//                 return data\n//             })\n// }\n\n\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n    const history = useHistory()\n    const [dataSet, setDataSet] = useState(\n        {movieName: '',\n        upload: false,\n        title:'',\n        genre:'',\n        year:'',\n        director:'',\n        length:'',\n        plot:'',\n        resultID: '',\n        img: '',\n        data: '',\n        response: false}\n    )\n        \n    function nameInput(event) {\n        setDataSet({\n            movieName: event.target.value.trim()\n        })\n    }\n\n    function handleSearch() {\n        console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n        fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n            .then(response => \n                response.json())\n            \n            .then(data => {setDataSet({\n                response: data.Response === \"False\" ? false : true,\n                title: data.Title,\n                year: data.Year,\n                length: data.Runtime,\n                director: data.Director,\n                genre: data.Genre,\n                plot: data.Plot,\n                resultID : data.imdbID,\n                img : data.Poster\n            })\n            console.log(\"finished search\")})\n            console.log(\"result:\" + dataSet.searchResult)\n    }\n\n    const firebase = useContext(FirebaseContext)\n    const [runSubmit, setRunSubmit] = useState(0)\n    function submit() {\n        if(dataSet != null && dataSet.response) {\n            var movieListFire = firebase.db.collection(\"movieTester\").doc(\"testUser\")\n            movieListFire.update({\n                movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n            })\n            console.log(\"successfully added to your list!\")\n        }\n    }\n    useEffect(() => { submit()\n            \n    }, [runSubmit])\n\n    function enterPressed(event) {\n        var code = event.keyCode || event.which;\n        if(code === 13) { //13 is the enter keycode\n            handleSearch()\n            setRunSubmit(runSubmit + 1)\n        } \n    }\n\n    return(\n        <div>\n            <input type=\"text\" placeholder=\"Add another movie\" onChange = {nameInput} style = {{width: 500, height: 100, fontSize: 50}} onKeyUp = {enterPressed}/><br/>\n            <button onClick = {() => {history.push('/MovieCollection')}}>Back to collection</button>\n            <button onClick = {handleSearch}>Search</button>\n            <button onClick = {submit}>Add to your collection!</button>\n            <br/>\n            <p style={{visibility: dataSet.response ? \"visible\" : \"hidden\"}, {textAlign: 'left'}}>\n                <img src = {dataSet.img} ></img>\n                <h1>{dataSet.response && dataSet.title}</h1>\n                {dataSet.response && \"Year: \" + dataSet.year}<br/>\n                {dataSet.response && \"Length: \" + dataSet.length}<br/>\n                {dataSet.response && \"Director: \" + dataSet.director}<br/>\n                {dataSet.response && \"Genre: \" + dataSet.genre}<br/>\n                {dataSet.response && dataSet.plot}<br/>\n            </p>\n            \n        </div>\n    )\n}\n\nexport default MovieFinder"]},"metadata":{},"sourceType":"module"}