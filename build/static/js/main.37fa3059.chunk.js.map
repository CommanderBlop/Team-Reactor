{"version":3,"sources":["Firebase/firebase.js","Firebase/index.js","Firebase/context.js","NavBar.js","community-posts/Note.jsx","community-posts/CreateArea.jsx","community-posts/home.jsx","MovieCollection/addMovie.js","MovieCollection/MovieCollection.js","Firebase/AuthContext.js","Authentication/login.js","Authentication/Register.js","Friends.js","Post.js","AddFriendModal.js","ShowPost/PostCard.js","ShowPost/ShowPost.js","Genre.js","DailyRec.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Firebase","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fb","auth","db","storage","ref","FirebaseContext","React","createContext","NavBar","useHistory","useContext","useState","user","setUser","onAuthStateChanged","style","color","Navbar","bg","variant","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","displayName","Item","Note","props","content","CreateArea","note","setNote","name","onChange","event","target","value","prevNote","placeholder","rows","Button","onClick","onAdd","preventDefault","Home","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","useEffect","collection","doc","get","then","exists","comments","data","console","log","set","catch","error","background","height","newNote","map","key","onDelete","MovieFinder","history","movieName","upload","genre","year","director","length","plot","resultID","img","response","dataSet","setDataSet","handleSearch","fetch","json","Response","Title","Year","Runtime","Director","Genre","Plot","imdbID","Poster","searchResult","runSubmit","setRunSubmit","submit","movieListFire","update","movieID","firestore","FieldValue","arrayUnion","Card","Header","Body","Text","type","trim","width","fontSize","onKeyUp","keyCode","which","push","src","textAlign","MovieCollection","mList","userMovieList","setUserMovieList","setTriggerNext","counter","setCounter","omdbData","setOmdbData","triggerNext","url","toString","buttonClick","counterChange","undefined","AuthContext","Login","initialValues","username","password","onSubmit","values","a","setSubmitting","signInWithEmailAndPassword","alert","Register","insta","snap","createUserWithEmailAndPassword","email","res","updateProfile","uid","friends","genres","Friends","setFriends","loading","setLoading","friendList","friendsBuilder","count","forEach","friend","localDisplay","genreBuilder","Badge","Row","Col","sm","Post","add","likes","for","AddFriend","setTarget","show","Modal","onHide","handleHide","closeButton","Footer","disabled","PostCard","open","setOpen","modal","setModal","comment","split","pop","display","substring","lastIndexOf","AddFriendModal","wordWrap","aria-expanded","in","currentUser","window","location","reload","ShowPost","posts","setPosts","postsBuilder","querySnapshot","post","postHolder","setGenres","checkingField","Form","Check","label","checked","includes","concat","DailyRec","movieData","setMovieData","genreList","setGenreList","setDisplay","arrayMatch","arr1","arr2","returnVal","element","randMovieID","i","Math","round","random","processedData","Length","filmGenres","Type","Img","ListGroup","ListGroupItem","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.37fa3059.chunk.js","sourcesContent":["// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import \"firebase/firestore\";\n// firebase.initializeApp(firebaseConfig);\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n\nimport * as firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/auth';\nimport 'firebase/functions';\nimport \"firebase/performance\";\n\nconst config = {\n  apiKey: \"AIzaSyAs9poikn_6GE2eP_Yz7nibaKrC9WcNGNU\",\n  authDomain: \"team-reactors.firebaseapp.com\",\n  databaseURL: \"https://team-reactors.firebaseio.com\",\n  projectId: \"team-reactors\",\n  storageBucket: \"team-reactors.appspot.com\",\n  messagingSenderId: \"767264378815\",\n  appId: \"1:767264378815:web:fa3a768a8eded80fdc5b0a\",\n  measurementId: \"G-VBFR0CR7PS\"\n};\n\nconst Firebase = {\n    app: firebase.initializeApp(config),\n    fb: firebase, \n    auth: firebase.auth(),\n    db: firebase.firestore(),\n    storage: firebase.storage().ref(), \n}\n\n\n\nexport default Firebase;\n\n// let Firebase = app.initializeApp(config);\n// export default Firebase;\n","import FirebaseContext from './context.js';\nimport Firebase from './firebase.js';\n\nexport default FirebaseContext;\nexport { Firebase };\n","import React from 'react';\nimport Firebase from './firebase.js'\n\nconst FirebaseContext = React.createContext(Firebase);\n\nexport default FirebaseContext;\n","import React, { useContext, useState } from 'react'\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'\nimport { useHistory, Link } from \"react-router-dom\";\nimport FirebaseContext from './Firebase'\n// import {  } from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction NavBar() {\n    let history = useHistory()\n    let firebase = useContext(FirebaseContext)\n    // console.log(firebase.auth.currentUser)\n    const [user, setUser] = useState(null)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    return (\n        <div style={{color:\"#3b6978\"}}>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                <Navbar.Brand as={Link} to=\"/\">\n                    Filmster\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/DailyRec\">Daily Rec</Nav.Link>\n                        <Nav.Link as={Link} to=\"/community\">Community</Nav.Link>\n                        <Nav.Link as={Link} to=\"/friends\">Friends</Nav.Link>\n                        <Nav.Link as={Link} to=\"/MovieCollection\">My Collection</Nav.Link>\n                        <Nav.Link as={Link} to=\"/post\">Post</Nav.Link>\n                        <Nav.Link as={Link} to=\"/showPost\">View Posts</Nav.Link>\n                    </Nav>\n                    <Nav>\n                        {user ?\n                            <NavDropdown title={user.displayName}>\n                                <NavDropdown.Item as={Link} to=\"/genre\">Update genre</NavDropdown.Item>\n                                <NavDropdown.Item as={Link} to=\"/login\">Switch account</NavDropdown.Item>\n                            </NavDropdown>\n                            : <Nav.Link as={Link} to=\"/login\">Log in</Nav.Link>}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default NavBar","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\n\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <p>{props.content}</p>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nimport Button from 'react-bootstrap/Button';\n\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    //save note\n    setNote({\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"all-form\">\n\n        <textarea\n          className=\"form-textarea\"\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Add a new comment\"\n          rows=\"3\"\n        />\n        <br/>\n        <Button variant=\"info\" className=\"sub-but form-button\" onClick={submitNote}>+</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState, useContext, useEffect} from \"react\";\nimport FirebaseContext from '../Firebase';\n\nimport './discussion-group.css';\n\n\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport {Button} from 'react-bootstrap'\n\n\n\n// props: database idto search for\nfunction Home(props) {\n  const id = props.id;\n\n\n  const firebase = useContext(FirebaseContext);\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    firebase.db.collection(\"community-discussion-board\").doc(id).set({\n        comments: [...notes, newNote]\n    })\n    .then(function() {\n      setNotes(prevNotes => {\n        return [...prevNotes, newNote];\n      });\n    })\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    });\n  }\n\n  useEffect(() => {\n\n\n\n    // if database already exist\n    firebase.db.collection(\"community-discussion-board\").doc(id).get().then(function(doc) {\n    if (doc.exists) {\n        const {comments} = doc.data();\n        console.log(\"Document data:\", comments);\n        setNotes(comments);\n    } else { // else it doesn't exist, create one\n        // doc.data() will be undefined in this case\n        firebase.db.collection(\"community-discussion-board\").doc(id).set({\n            comments: []\n        })\n        .then(function() {\n            console.log(\"created new document for discussion\");\n          })\n\n        .catch(function(error) {\n            console.error(\"Error writing document: \", error);\n        });\n\n\n    }\n}).catch(function(error) {\n    console.log(\"Error getting document:\", error);\n});\n  },[]);\n\n\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div style={{background:'#f5f5f5', height: \"40em\"}}>\n    <div className=\"dis-div\">\n      <h1>Community Post</h1>\n\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n    </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport FirebaseContext from '../Firebase'\nimport { Card, Button, Collapse,ListGroup,ListGroupItem } from 'react-bootstrap'\nimport \"./collection.css\"\n\nconst API_KEY = \"7d667341\"\n\n// function FindMovie(movieName, releaseYear) {\n//     //find the movie\n//     fetch(\"http://www.omdbapi.com/?t=\" + movieName + \"&y=\" + releaseYear + \"&apikey=\" + API_KEY)\n//             .then(response =>\n//                 response.json())\n\n//             .then(data => {\n//                 return data\n//             })\n// }\n\n\n// function AddMovie(movieIMDB) {\n//     const firebase = useContext(FirebaseContext)\n//     firebase.collection(\"movieTester\").doc(\"testUser\").update({\n//         regions: firebase.firestore.movieID.arrayUnion(movieIMDB)\n//     })\n// }\n\n// function submitNew(ID) {\n//     const firebase = useContext(FirebaseContext)\n//         firebase.db.collection(\"movieTester\").doc(\"testUser\").update({\n//             regions: firebase.firestore.movieID.arrayUnion(ID)\n//         })\n//         console.log(\"successfully added to your list!\")\n//     return (\n//         <div></div>\n//     )\n// }\n\nfunction MovieFinder() {\n    const history = useHistory()\n    const [dataSet, setDataSet] = useState(\n        {\n            movieName: '',\n            upload: false,\n            title: '',\n            genre: '',\n            year: '',\n            director: '',\n            length: '',\n            plot: '',\n            resultID: '',\n            img: '',\n            data: '',\n            response: false\n        }\n    )\n\n    function nameInput(event) {\n        setDataSet({\n            movieName: event.target.value.trim()\n        })\n    }\n\n    function handleSearch() {\n        console.log(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n        fetch(\"http://www.omdbapi.com/?t=\" + dataSet.movieName + \"&apikey=\" + API_KEY)\n            .then(response =>\n                response.json())\n\n            .then(data => {\n                setDataSet({\n                    response: data.Response === \"False\" ? false : true,\n                    title: data.Title,\n                    year: data.Year,\n                    length: data.Runtime,\n                    director: data.Director,\n                    genre: data.Genre,\n                    plot: data.Plot,\n                    resultID: data.imdbID,\n                    img: data.Poster,\n                    movieName: dataSet.movieName\n                })\n                console.log(\"finished search\")\n            })\n        console.log(\"result:\" + dataSet.searchResult)\n    }\n\n    const firebase = useContext(FirebaseContext)\n    const [runSubmit, setRunSubmit] = useState(0)\n    function submit() {\n        if (dataSet != null && dataSet.response) {\n            var movieListFire = firebase.db.collection(\"movieTester\").doc(\"testUser\")\n            movieListFire.update({\n                movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n            })\n            firebase.db.collection(\"user\").doc()\n            movieListFire.update({\n                movieID: firebase.fb.firestore.FieldValue.arrayUnion(dataSet.resultID)\n            })\n            console.log(\"successfully added to your list!\")\n        }\n    }\n    useEffect(() => {\n        submit()\n\n    }, [runSubmit])\n\n    function enterPressed(event) {\n        var code = event.keyCode || event.which;\n        if (code === 13) { //13 is the enter keycode\n            handleSearch()\n            setRunSubmit(runSubmit + 1)\n        }\n    }\n\n    // <p style={{ visibility: dataSet.response ? \"visible\" : \"hidden\" }, { textAlign: 'left' }}>\n    //                 <img src={dataSet.img} ></img>\n    //                 <h1>{dataSet.response && dataSet.title}</h1>\n    //                 {dataSet.response && \"Year: \" + dataSet.year}<br />\n    //                 {dataSet.response && \"Length: \" + dataSet.length}<br />\n    //                 {dataSet.response && \"Director: \" + dataSet.director}<br />\n    //                 {dataSet.response && \"Genre: \" + dataSet.genre}<br />\n    //                 {dataSet.response && dataSet.plot}<br />\n    //             </p>\n\n\n    return (\n        <div style={{background:'#f5f5f5', height: \"40em\"}}>\n            <Card className=\"text-center\" >\n                <Card.Header>Search:</Card.Header>\n\n                <Card.Body>\n\n                  <Card.Text >\n                    <input className=\"form-control form-control-lg center-item\" type=\"text\" placeholder=\"Add another movie\" onChange={nameInput} style={{ width: 500, height: 100, fontSize: 50 }} onKeyUp={enterPressed} /><br />\n                  </Card.Text>\n\n                  <Button variant=\"info\" className=\"collection-but\" onClick={() => { history.push('/MovieCollection') }}>Back to collection</Button>\n                  <Button variant=\"info\" className=\"collection-but\" onClick={handleSearch}>Search</Button>\n                  <Button variant=\"info\" className=\"collection-but\" onClick={submit}>Add to your collection!</Button>\n\n                </Card.Body>\n            </Card>\n            <br />\n                <div className=\"card-group\" style={{ width: dataSet.response ? \"38rem\" : \"0rem\" }}>\n\n                  <div className=\"card\" >\n                    <img className=\"card-img-top\" src={dataSet.img}></img>\n                  </div>\n                  <div className=\"card\" style={{ textAlign: 'left' }}>\n                    <div className=\"card-body\">\n\n                      <h5 className=\"card-title\">{dataSet.response && dataSet.title}</h5>\n                      <p className=\"card-text\">{dataSet.response && \"Year: \" + dataSet.year}</p>\n                      <p className=\"card-text\">{dataSet.response && \"Length: \" + dataSet.length}</p>\n                      <p className=\"card-text\">{dataSet.response && \"Director: \" + dataSet.director}</p>\n                      <p className=\"card-text\">{dataSet.response && \"Genre: \" + dataSet.genre}</p>\n                      <p className=\"card-text\">{dataSet.response && dataSet.plot}</p>\n\n                    </div>\n                  </div>\n                </div>\n\n\n        </div>\n    )\n}\n\nexport default MovieFinder\n","import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from '../Firebase'\nimport {useHistory, Link} from 'react-router-dom'\nimport MovieFinder from './addMovie'\nimport { Card, Button, Collapse,ListGroup,ListGroupItem } from 'react-bootstrap'\nimport \"./collection.css\"\n\nconst API_KEY = \"7d667341\"\n\n\n\nfunction MovieCollection() {\n    //const userGenreList = ['romantic', 'adventure', 'sci-fi', 'suspense', 'anime']\n    const firebase = useContext(FirebaseContext)\n    const mList = firebase.db.collection(\"movieTester\").doc(\"testUser\")\n    const [userMovieList, setUserMovieList] = useState([''])\n    const history = useHistory()\n    //get user movie collection and put it he re\\\n    useEffect(() => {\n        mList.get().then(function(doc) {\n            if (doc.exists) {\n                setUserMovieList(doc.data().movieID)\n                console.log(\"Document data:\", doc.data())\n            } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n                setUserMovieList(['']);\n            }\n            setTriggerNext(1)\n            }).catch(function(error) {\n                console.log(\"Error getting document:\", error);\n            })\n        } ,[]\n    )\n\n    //const [userMovieList, setUserMovieList] = firetbase.db.collection(\"movieTester\").doc(\"testUser\")\n    const [counter, setCounter] = useState(0)\n    const [omdbData, setOmdbData] = useState('Loading...')\n\n    const [triggerNext, setTriggerNext] = useState(0)\n    //let textToBeDisplayed = userGenreList[Math.round(Math.random() * userGenreList.length)]\n    let url = \"http://www.omdbapi.com/?i=\" + userMovieList[counter].toString() + \"&apikey=\" + API_KEY\n    //console.log(url)\n\n    //fetch data\n    useEffect(() => {\n        function doFetch() {\n            fetch(url)\n            .then(response =>\n                response.json())\n\n            .then(data => {\n                setOmdbData(data)\n            })\n        }\n        doFetch()\n    }, [triggerNext])\n\n    let title\n    let genre\n    let director\n    let plot\n    let img\n\n    //extract needed info\n    if(userMovieList != ['']) {\n         title = omdbData === 'Loading...' ? omdbData : omdbData.Title\n         genre = omdbData === 'Loading...' || omdbData.Genre === undefined? '' : \"Genre: \" + omdbData.Genre\n         director = omdbData === 'Loading...' || omdbData.Director === undefined? '' : \"Director: \" + omdbData.Director\n         plot = omdbData === 'Loading...' || omdbData.Plot === undefined ? '' : omdbData.Plot\n         img = omdbData === 'Loading...' ? omdbData : omdbData.Poster\n    } else {\n         title = \"Your collection is empty\"\n         genre = ''\n         director = ''\n         plot = ''\n    }\n\n\n    //button right/left click handler\n    function buttonClick(counterChange) {\n        if(counterChange > 0 && counter + counterChange >= userMovieList.length) {\n            setCounter(0);\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading...')\n            return\n        }\n        if(counterChange < 0 && counter + counterChange < 0) {\n            setCounter(userMovieList.length - 1)\n            setTriggerNext(triggerNext+1)\n            setOmdbData('Loading...')\n            return\n        }\n        setCounter(counter + counterChange)\n        setTriggerNext(triggerNext+1)\n        setOmdbData('Loading...')\n    }\n\n    return (\n\n        <div style={{background:'#f5f5f5', height: \"40em\"}}>\n\n                <div className=\"card-group center-item\" style={{ width: '55rem' }}>\n\n                  <div className=\"card\" >\n                    <img className=\"card-img-top\" src={img}></img>\n                  </div>\n\n                  <div className=\"card\" style={{ textAlign: 'left' }}>\n                    <div className=\"card-body\">\n\n                      <h5 className=\"card-title\">{title}</h5>\n                      <hr/>\n                      <p className=\"card-text\">{genre}</p>\n                      <hr/>\n                      <p className=\"card-text\">{director}</p>\n                      <hr/>\n                      <p className=\"card-text\">{plot}</p>\n                      <hr/>\n                      <Button variant=\"info\" className=\"collection-but\" onClick = {() => {history.push('/')}}>Back</Button>\n                      <Button variant=\"info\" className=\"collection-but\" onClick = {() =>buttonClick(-1)}>{'<'}</Button>\n                      <Button variant=\"info\" className=\"collection-but\" onClick = {() => buttonClick(1)}>{'>'}</Button>\n                      <Button variant=\"info\" className=\"collection-but\" onClick = {() => {history.push('/addMovie')}}>Search</Button>\n\n                    </div>\n                  </div>\n                </div>\n\n        </div>\n    )\n}\n\nexport default MovieCollection\n","import React, { useEffect, useState, useContext } from \"react\";\n\nimport FirebaseContext from \"./index\";\n\n//typescript stuff (use as doccumentaiton)\n// type ContextProps = {\n//     user: firebase.User | null;\n//     isAuthenticated: boolean;\n//     setUser: any;\n//     isLoadingAuthState: boolean;\n// };\n\nconst AuthContext = React.createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const firebase = useContext(FirebaseContext)\n  const [user, setUser] = useState(null);\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\n\n      console.log('reached')\n\n  useEffect(() => {\n    //Run only on mount\n    firebase.auth.onAuthStateChanged((user) => {\n      if(user){\n        setUser(user);\n        console.log('user set')\n      }else{\n        setUser(null)\n        setLoadingAuthState(false)\n      }\n\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        isAuthenticated: user !== null && typeof user !== 'undefined',\n        setUser: setUser,\n        isLoadingAuthState: loadingAuthState,\n      }}\n    >\n\n      {children}\n   </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext\n","\nimport React, { useContext } from \"react\";\nimport './login.css';\nimport FirebaseContext from '../Firebase'\nimport AuthContext from '../Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport {Button} from 'react-bootstrap'\n\n// import * as firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// const config = {\n//   apiKey: \"AIzaSyAs9poikn_6GE2eP_Yz7nibaKrC9WcNGNU\",\n//   projectId: \"team-reactors\"\n// };\n// firebase.initializeApp(config)\n\n\nfunction Login(props) {\n  const history = useHistory()\n  const firebase = useContext(FirebaseContext)\n  const authContext = useContext(AuthContext)\n  // console.log(firebase.auth.currentUser)\n\n  return (\n<div style={{background:'#f5f5f5', height: \"40em\"}}>\n    <div className=\"login-page\">\n      <div className=\"form\">\n\n\n        <Formik\n          initialValues={{ username: '', password: '' }}\n          onSubmit={async(values, { setSubmitting }) => {\n            try {\n              //wait until log in is complete\n              await firebase.auth.signInWithEmailAndPassword(values.username, values.password)\n              history.push('/')\n            } catch (error) {\n              alert(error)\n            }\n          }}\n        >\n          <Form className=\"login-form\">\n            <Field as=\"input\" type=\"text\" placeholder=\"username\" name=\"username\" />\n            <Field as=\"input\" type=\"password\" placeholder=\"password\" name=\"password\" />\n            <Button variant=\"info\" type=\"submit\">login</Button>\n            <p className=\"message\">Not registered? <Link to=\"/register\">Create an account</Link></p>\n          </Form>\n        </Formik>\n\n\n\n      </div>\n    </div>\n</div>\n\n\n  );\n}\n\nexport default Login;\n","\nimport React, { useContext } from \"react\";\nimport './login.css';\nimport FirebaseContext from '../Firebase'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\n\n\nfunction Register(props) {\n  const firebase = useContext(FirebaseContext)\n  const history = useHistory()\n\n  return (\n<div style={{background:'#f5f5f5', height: \"40em\"}}>\n    <div className=\"register-page\">\n      <div className=\"form\">\n\n        <Formik\n          initialValues={{ name: '', username: '', password: '',  insta: '', snap: ''}}\n          onSubmit={async (values, { setSubmitting }) => {\n            try {\n              const res = await firebase.auth.createUserWithEmailAndPassword(values.email, values.password)\n              await res.user.updateProfile({ displayName: values.name })\n              const user = res.user\n              firebase.db.collection(\"user\").doc(user.uid).set({\n                  name: values.name, \n                  friends: [], \n                  insta: values.insta, \n                  snap: values.snap, \n                  genres: [], \n              })\n              alert('Signup successful')\n              history.push('/genre')\n          } catch (err) {\n              alert(err)\n          }\n          }}\n        >\n          <Form className=\"register-form\">\n            <Field as=\"input\" type=\"text\" placeholder=\"name\" name=\"name\" />\n            <Field as=\"input\" type=\"email\" placeholder=\"email\" name=\"email\" />\n            <Field as=\"input\" type=\"password\" placeholder=\"password\" name=\"password\" />\n            <Field as=\"input\" type=\"text\" placeholder=\"instagram (optional)\" name=\"insta\" />\n            <Field as=\"input\" type=\"text\" placeholder=\"snapchat (optional)\" name=\"snap\" />\n            <button type=\"submit\">Sign Up</button>\n            <p className=\"message\">Already registered? <Link to=\"/login\">Sign In</Link></p>\n          </Form>\n        </Formik>\n\n\n\n      </div>\n    </div>\n</div>\n  );\n}\n\nexport default Register;\n\n","\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card, Badge, Row, Col } from 'react-bootstrap'\n\nfunction Friends() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [friends, setFriends] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user) {\n            let friendList\n            let friendsBuilder = []\n            let count = 0\n            firebase.db.collection('user').doc(user.uid).get().then(function (doc) {\n                friendList = doc.data().friends\n            }).then(function () {\n                friendList.forEach((friend, index) => {\n                    firebase.db.collection('user').doc(friend).get().then(function (doc) {\n                        friendsBuilder.push(doc.data())\n                        count++\n                        if (count === friendList.length) {\n                            setLoading(false)\n                        }\n                    })\n                })\n                setFriends(friendsBuilder)\n            })\n        }\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading) {\n        // console.log(friends)\n        localDisplay = friends.map((friend, index) => {\n            let genreBuilder = friend.genres.map(genre => {\n                return <Badge className=\"mr-1\" variant=\"secondary\">{genre}</Badge>\n            })\n            return (\n                <>\n                    <Card>\n                        <Card.Body>\n                            <h4>{friend.name}</h4>\n                            <h5>Genres: {genreBuilder}</h5>\n                            {friend.insta ? <p>Intagram: {friend.insta}</p> : <p>Insagram: N/A</p>}\n                            {friend.snap ? <p>Snapchat: {friend.snap}</p> : <p>Snapchat: N/A</p>}\n                        </Card.Body>\n                    </Card>\n                    <br />\n                </>\n            )\n        })\n    }\n\n\n    return (\n        <div style={{background:'#f5f5f5', height: \"40em\"}}>\n            <h3>Friends</h3>\n        <Row>\n            <Col sm={3}></Col>\n            <Col sm={6}>\n            <p>{localDisplay}</p>\n            </Col>\n        </Row>\n            \n        </div>\n    )\n}\n\nexport default Friends","\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card, Button } from 'react-bootstrap'\n\nfunction Post() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState(null)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    // changed part in Form\n    // <label>Movie/Seires/Show Title: </label> <br/>\n    // <Field as=\"input\" name=\"title\"/> <br/>\n    // <label>Content: </label><br/>\n    // <Field as=\"textarea\" name=\"content\"/> <br/>\n    // <button type=\"submit\">Post</button>\n\n    return (\n        <div style={{background:'#f5f5f5', height: \"40em\"}}>\n            <Formik\n                initialValues={{ content: '', title: '' }}\n                onSubmit={(values) => {\n                    // alert(JSON.stringify(values, 2))\n                    firebase.db.collection('post').add({\n                        title: values.title,\n                        content: values.content,\n                        user: user.uid,\n                        likes: 0,\n                        comments: [],\n                    }).then(\n                        alert(\"Posted!\")\n                    ).catch(error => alert(error))\n                }}\n            >\n                <Form className=\"Post-div\">\n                <div className=\"form-group\">\n                  <h3 for=\"exampleFormControlInput1\">Movie/Seires/Show Title:</h3>\n                  <Field as=\"input\" name=\"title\" className=\"form-control\"/>\n                </div>\n\n                <div className=\"form-group\">\n                  <h4 for=\"exampleFormControlTextarea1\">Content:</h4>\n                  <Field as=\"textarea\" name=\"content\" className=\"form-control\" />\n                </div>\n                <Button variant=\"info\" type=\"submit\">Post</Button>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nexport default Post\n","\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card, Modal, Button, Badge } from 'react-bootstrap'\n\nfunction AddFriend(props) { // pass in the user's id and handleHide function\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [target, setTarget] = useState()\n    const [loading, setLoading] = useState(true)\n    const [show, setShow] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    const handleClick = () => {\n        firebase.db.collection('user').doc(user.uid).update({\n            friends: firebase.fb.firestore.FieldValue.arrayUnion(props.id)\n        }).then(function () {\n            firebase.db.collection('user').doc(props.id).update({\n                friends: firebase.fb.firestore.FieldValue.arrayUnion(user.uid)\n            })\n        }).then(\n            alert('Friended!')\n        ).catch(function (error) {\n            alert(error)\n        })\n    }\n\n    useEffect(() => {\n        firebase.db.collection('user').doc(props.id).get().then(function (doc) {\n            if (!doc.exists) throw 'user not found'\n            setTarget(doc.data())\n            setLoading(false)\n        }).catch(function (error) {\n            alert(error)\n        })\n    }, [])\n\n    \n\n    let localDisplay\n\n    if (!loading) {\n        let genreBuilder = target.genres.map(genre => {\n            return <Badge className=\"mr-1\" variant=\"secondary\">{genre}</Badge>\n          })\n        localDisplay =\n            <Modal show={show} onHide={props.handleHide}>\n                <Modal.Header closeButton>\n                    {props.id}\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>{target.name}</h4>\n                    <h5>Genres: {genreBuilder}</h5>\n                    {target.insta ? <p>Intagram: {target.insta}</p> : <p>Insagram: N/A</p>}\n                    {target.snap ? <p>Snapchat: {target.snap}</p> : <p>Snapchat: N/A</p>}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={props.handleHide} variant=\"light\">Miss yo shot :(</Button>\n                    <Button variant=\"info\" onClick={handleClick} disabled={!user}>Friend!</Button>\n                </Modal.Footer>\n            </Modal>\n    }\n\n    return (\n        <>\n            {localDisplay}\n        </>\n    )\n}\n\nexport default AddFriend","import React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase'\nimport AuthContext from '../Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card, Button, Collapse } from 'react-bootstrap'\nimport AddFriendModal from '../AddFriendModal'\nimport \"./ShowPostStyle.css\"\n\nfunction PostCard(props) {\n    const [open, setOpen] = useState(false)\n    const [modal, setModal] = useState()\n    const handleHide = () => setModal()\n    const firebase = useContext(FirebaseContext)\n\n    let localDisplay = props.comments.map(comment => {\n        let user = comment.split(',').pop()\n        let content = comment.substring(0, comment.lastIndexOf(','))\n        let display = content + ' - ' + user\n        return <p onClick={() => {\n            setModal(<AddFriendModal id={user} handleHide={handleHide}/>)\n        }}>{display}</p>\n    })\n\n    return (\n        <div className=\"PostCard\">\n            <Card>\n                <Card.Header>\n                    <Card.Title onClick={() => {\n                        setModal(<AddFriendModal id={props.user} handleHide={handleHide}/>)\n                    }}>{props.user}</Card.Title>\n                    <Card.Text style={{ wordWrap: \"breakWord\" }}>\n                        <h4>{props.title}</h4>\n                        <p>{props.content}</p>\n                    </Card.Text>\n                    <Button variant=\"info\" onClick={() => setOpen(!open)}\n                        aria-expanded={open}>\n                        {props.comments.length} comments\n                    </Button>\n\n                </Card.Header>\n\n                <Collapse in={open}>\n                    <div>\n                        <Card.Body>\n                            {localDisplay}\n                        </Card.Body>\n\n                        <Card.Footer>\n                            <Formik\n                                initialValues={{ comment: '' }}\n                                onSubmit={values => {\n                                    // console.log('clikced')\n                                    firebase.db.collection('post').doc(props.id).update({\n                                        comments: firebase.fb.firestore.FieldValue.arrayUnion(values.comment + ',' + props.currentUser)\n                                    }).then(()=>{\n                                      alert(\"Posted!\")\n                                      window.location.reload(false);\n                                      }\n                                    ).catch(error => alert(error))\n                                }}\n                            >\n                                <Form className=\"form-inline \">\n\n                                      <div className=\"form-group mb-4\">\n                                        <Field className=\"form-control-plaintext com-input\" as=\"input\" placeholder=\"say something...\" name=\"comment\" />\n\n                                        <Button variant=\"info\" type=\"submit\" className=\"btn btn-primary mb-2 com-but\">Comment</Button>\n\n\n                                      </div>\n\n                                </Form>\n                            </Formik>\n                        </Card.Footer>\n\n\n                    </div>\n                </Collapse>\n            </Card>\n            {modal}\n        </div>\n    )\n}\n\nexport default PostCard\n","\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from '../Firebase'\nimport AuthContext from '../Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Form, Field } from 'formik'\nimport { Card } from 'react-bootstrap'\nimport PostCard from './PostCard'\nimport AddFriendModal from '../AddFriendModal'\n\nfunction ShowPost() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [posts, setPosts] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user) {\n            let postsBuilder = []\n            firebase.db.collection('post').get().then(function (querySnapshot) {\n                querySnapshot.forEach(post => {\n                    let postHolder = post.data()\n                    postHolder.id = post.id\n                    postsBuilder.push(postHolder)\n                })\n                setPosts(postsBuilder)\n            }).then(function () {\n                // console.log(postsBuilder)\n                setLoading(false)\n\n            }).catch(function (error) {\n                alert(error)\n            })\n\n        }\n    }, [user])\n\n    let localDisplay = 'loading...'\n\n    if (!loading) {\n        console.log(posts)\n        console.log(typeof posts)\n        localDisplay = posts.map((post, index) => {\n            return (\n                <PostCard\n                    user={post.user}\n                    title={post.title}\n                    content={post.content}\n                    comments={post.comments}\n                    id={post.id}\n                    currentUser={user.uid}\n                />\n            )\n        })\n    }\n\n\n    return (\n        <div style={{background:'#f5f5f5', height: \"40em\"}}>\n            <p className=\"center-all-post\">{localDisplay}</p>\n            {/* <AddFriendModal id=\"5gd1zjFxT8a49wVFXIER3LkKfck2\"/> */}\n        </div>\n    )\n}\n\nexport default ShowPost\n","\nimport React, { useContext, useState, useEffect } from \"react\";\nimport FirebaseContext from './Firebase'\nimport AuthContext from './Firebase/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Formik, Field } from 'formik'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nfunction Genre() {\n    const firebase = useContext(FirebaseContext)\n    const [user, setUser] = useState()\n    const [genres, setGenres] = useState([])\n    const history = useHistory()\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    const handleNext = () => {\n        firebase.db.collection('user').doc(user.uid).update({\n            genres: genres, \n        }).then(\n            history.push('/')\n        ).catch(function(error){\n            alert(error)\n        })\n    }\n\n    let genreList = ['Action', 'Adult', 'Adventure', 'Animation', 'Biography', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'Film Noir', 'Game Show', 'History', 'Horror', 'Musical', 'Music', 'Mystery', 'News', 'Reality TV', 'Romance', 'Sci Fi', 'Short', 'Sport', 'Talk Show', 'Thriller', 'War', 'Western']\n    let checkingField = genreList.map(genre => {\n        return (\n            <Form.Check\n                type={'checkbox'}\n                id={genre}\n                label={genre}\n                checked={genres.includes(genre)}\n                onChange={genres.includes(genre) ? () => {\n                    setGenres(genres.filter(filter => filter !== genre))\n                } : () => {\n                    setGenres(genres.concat(genre))\n                }}\n            />\n        )\n    })\n\n\n    return (\n        <div style={{background:'#f5f5f5', height: \"50em\"}}>\n            <h3>Choose the genres you like: </h3>\n            <Form id=\"genre\">\n                {checkingField}\n                {/* <Form.Check\n                    type={'checkbox'}\n                    id={'act ion'}\n                    label={'Action'}\n                    checked={genres.includes('action')}\n                    onChange={genres.includes('action') ? () => {\n                        setGenres(genres.filter(filter => filter !== 'action'))\n                    } : () => {\n                        setGenres(genres.concat('action'))\n                    }}\n                /> */}\n                {/* <Button variant=\"light\" onClick={() => setGenres([])}>Clear</Button> <br/> */}\n                <Button variant=\"info\" onClick={handleNext} disabled={!user}>Next</Button>\n            </Form>\n\n        </div>\n    )\n}\n\nexport default Genre","import React, {useState, useEffect, useContext} from 'react'\nimport FirebaseContext from './Firebase'\nimport { Card,ListGroup,ListGroupItem, Button } from 'react-bootstrap'\n\nconst API_KEY = \"7d667341\"\n\nfunction DailyRec(props) {\n    let [movieData, setMovieData] = useState({})\n    const [user, setUser] = useState()\n    const [genreList, setGenreList] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [display, setDisplay] = useState('')\n    const firebase = useContext(FirebaseContext)\n\n    firebase.auth.onAuthStateChanged(user => {\n        if (user) {\n            setUser(user);\n        } else {\n            setUser(null)\n        }\n    });\n\n    useEffect(() => {\n        if (user){\n            firebase.db.collection('user').doc(user.uid).get().then(function(doc){\n                setGenreList(doc.data().genres)\n                setLoading(false)\n            })\n        }\n    }, [user])\n   \n    function arrayMatch(arr1, arr2){\n        let returnVal = false\n        arr1.forEach(element => {\n            if (arr2.includes(element)){\n                returnVal = true\n                return\n            }\n        })\n        return returnVal\n    }\n\n    async function matching() {\n        console.log(\"enter while loop\")\n        while(true) {\n            let randMovieID = ''\n            let i = 0\n            for(i = 0; i < 7; i++) {\n                randMovieID += Math.round(Math.random() * 10).toString()\n            }\n            let url = \"http://www.omdbapi.com/?i=tt\" + randMovieID + \"&apikey=\" + API_KEY\n            let response = await fetch(url)\n            let data = await response.json()\n            console.log(data)\n            let processedData = data.Response === \"False\" ? \"Still Searching...\" : \"Doesn't match: \" + data.Title + \",  \" + data.Length + \"mins,  Directed by\" + \n                data.Director + \".  \" + data.Plot\n            setDisplay(processedData)\n            if (data.Response === \"False\"){\n                continue\n            }\n            let filmGenres = data.Genre.split(', ')\n            \n            console.log('fg', filmGenres)\n            if(arrayMatch(filmGenres, genreList) && data.Type !== 'episode') {\n                setMovieData(data)\n                setDisplay('FOUND!')\n                break\n            }\n            \n        }\n    }\n\n    return (\n        <div style={{background:'#f5f5f5', height: \"40em\"}}>\n          {/* <h1>{movieData == undefined ? \"Loading today's recommendation\" : ''}</h1> */}\n          <h2 style={{color:\"#204051\"}}>Get a movie recommendation based on your preferred genres - </h2>\n          <Card style={{ width: '25rem' }}  className=\"center-item\">\n\n            <Card.Img variant=\"top\" src={movieData.Poster} />\n\n            <Card.Body>\n                  <Card.Title>{movieData.Title}</Card.Title>\n                  <Card.Text>\n                    {movieData.Length === undefined? \"Length: \" : \"Length: \" + movieData.Length}\n                  </Card.Text>\n            </Card.Body>\n            \n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>{movieData.Director === undefined? \"Director: \" : \"Director: \" + movieData.Director}</ListGroupItem>\n              <ListGroupItem>{movieData.Plot === undefined? \"Plot: \" : \"Plot: \" + movieData.Plot}</ListGroupItem>\n            </ListGroup>\n          </Card>\n          <br/>\n            <Button onClick={matching} disabled={loading} variant=\"info\">Feeling lucky!</Button><br/>\n            <label disabled>{display}</label><br/>\n            <label>Note: It might take a while to load</label>\n        </div>\n    )\n}\n\nexport default DailyRec\n","import React, {useState, useEffect, useContext} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport FirebaseContext from './Firebase';\nimport NavBar from './NavBar'\nimport Home from './community-posts/home'\nimport MovieCollection from \"./MovieCollection/MovieCollection\"\nimport Login from \"./Authentication/login\"\nimport Register from './Authentication/Register'\nimport Friends from './Friends'\nimport Post from './Post'\nimport ShowPost from './ShowPost/ShowPost'\nimport AddMovie from './MovieCollection/addMovie'\nimport MovieFinder from './MovieCollection/addMovie';\nimport Genre from './Genre'\nimport DailyRec from './DailyRec';\n\nfunction App() {\n  // const firebase = useContext(FirebaseContext)\n  //   firebase.db.collection(\"movieTester\").doc(\"testUser\").set({\n  //       movieID: ['tt4566758','tt6723592','tt8946378']\n  //   })\n  //     .then(function() {\n  //     console.log(\"Document successfully written!\");\n  //   })\n  //     .catch(function(error) {\n  //         console.error(\"Error writing document: \", error);\n  //   });\n    \n  return (\n    <div className=\"App\">\n      <Router>\n          <NavBar />\n          <Switch>\n            <Route path=\"/genre\">\n              <Genre/>\n            </Route>\n            <Route path=\"/showPost\">\n              <ShowPost/>\n            </Route>\n            <Route path=\"/post\">\n              <Post/>\n            </Route>\n\n            <Route path=\"/MovieCollection\">\n              <MovieCollection />\n            </Route>\n\n            <Route path=\"/friends\">\n              <Friends/>\n            </Route>\n\n            <Route path=\"/DailyRec\">\n              <DailyRec/>\n            </Route>\n\n            <Route path=\"/community\">\n              <Home id=\"text-main\"/>\n            </Route>\n\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n                <Route path=\"/register\">\n\n              <Register/>\n            </Route>\n\n            <Route path=\"/addMovie\">\n              <MovieFinder/>\n            </Route>\n\n\n            <Route path=\"/\">\n              <DailyRec/>\n            </Route>\n\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}